//テーブルオブジェクトの定義

配列？＝「（""＋自分）！"]" 含む？」。
テーブル＝配列！作る。
テーブル：x=1+(画面！幅？)/-2.
テーブル：y=(画面！高さ？)/2。
テーブル：分析結果＝配列！作る．

配列：getarg＝「「全部！（自分！配列？）（（自分！1 読む）！配列？）本当」！なら「自分！1 読む」そうでなければ「自分」実行」。
テーブル：作る＝「ret＝自分！create。ret：フィールド名＝_rest！getarg。ret」。
//テーブル：書く＝「自分！（_rest！getarg）put」。


テーブル：ファイルから作る＝「｜fn deli encode｜
　tf＝テキストファイル！（fn）作る。
 「encode==(undef)」!なら「encode="utf-8"」実行。
　dt＝tf！(encode) 読む。
　「deli==(undef)」！なら「deli=","」実行。
　fld＝（dt！1 読む）！(deli) 分割。
　ret＝テーブル！（fld）作る。
　dt!「|n i|
　　「i>1」!なら「
　　　tmp=n!(deli) 分割。
　　　tmp!「|m|
　　　　「m==""」!なら「
　　　　　　ret!"NA" 書く。
　　　　　」そうでなければ「
　　　　　　ret!(m) 書く。
　　　　　」実行。
　　　」それぞれ実行。
　　」実行。
　」それぞれ実行。
　ret。
」。

テーブル：値読み出し＝「
　val=(自分!1 読む)。
　val。
」。

テーブル：フィールド番号取得＝「| f |
　fs=undef。
　要素数=フィールド名!要素数?。
　「｜n｜
　　「(フィールド名！（n）読む）＝＝f」！なら「fs=n。」実行。
　」！（フィールド名！要素数？）繰り返す。
　fs。
」。

テーブル：文字数カウント=「| Str |
　length=Str！長さ？。
　sum=0。
　「| n |
　　「全部！(((Str！( n ) 1 部分)！文字コード 10 進数) >31) (((Str！( n ) 1 部分)！文字コード 10 進数) <127) 本当」！なら
　　「sum=sum+1」そうでなければ
　　「sum=sum+2」実行。
　　」！ (length)  繰り返す。
　sum。
」。


テーブル：表示＝「| ;要素数 文字列 レコード カラム名 space s|
　要素数=自分：フィールド名！要素数。
　文字数＝配列！作る。
　レコード=""。

　カラム名＝""。
　フィールド名！「|n i|
　　文字数！(自分！(n) 文字数カウント)　書く。
　」それぞれ実行。
　
　自分！「|n i|
　　tmp=自分！(n+"") 文字数カウント。
　　「(文字数！((i-1)%要素数+1) 読む) < tmp」!なら「
　　　文字数！((i-1)%要素数+1)　(tmp) 上書き。
　　」実行。
　」それぞれ実行。

　space=""。
　フィールド名！「|n i|
　　「space=space+" "。」！((文字数！((i-1)%要素数+1) 読む)-(自分！(n+"") 文字数カウント)) 繰り返す。
　　カラム名=カラム名+(space+n+"|")。
　　space=""。
　」それぞれ実行。

　幅=0。
　文字数！「|n| 幅＝幅+n。」それぞれ実行。
　s=""。
　「s=s+"-"」！(幅+要素数) 繰り返す。
　
　lst=テキストエリア！(カラム名)　作る (3+(幅+要素数)*7.5) 400 大きさ (テーブル：x) (テーブル：y) 位置。
　lst!(s) 書く　改行。

　自分！「|n i|
　　「space=space+" "。」！((文字数！((i-1)%要素数+1) 読む)-(自分！(n+"") 文字数カウント)) 繰り返す。
　　レコード＝レコード！(space+n+"|")　連結。
　　space=""。
　　「((i-1)%要素数==要素数-1)」!なら「
　　　lst!(レコード) 書く　改行。
　　　レコード=""。
　　」実行。
　」それぞれ実行。
　テーブル：x=(テーブル：x)+(3+(幅+要素数)*7.5)。
　テーブル：フラグ=1。
　自分。
」。

テーブル：ファイル出力＝「｜fn｜
　　tf＝テキストファイル！（fn）作る。
　　tmp=""。
　　tf！（配列！作る）全部書く。
　　フィールド名!「|n i|
　　　tmp=(tmp)!(n+",")　連結。
　　」それぞれ実行。
　　tf!(tmp)　書く。
　　tmp=""。
　　自分！「|n i|
　　　tmp=(tmp)!(n+",")　連結。
 　　「i%(フィールド名!要素数?)==0」!なら「 tf!(tmp)　書く。tmp=""。」実行。
　　」それぞれ実行。
 　ラベル！"書き出し完了" 作る。
 　自分。
 」。

テーブル：分析結果：表示＝「| ; space max adjust_array charnum_array tmp_arr tmp_arr2 |
　「テーブル：フラグ ！= 1」！なら「テキストエリア！（自分）作る 180 400 大きさ (テーブル：x) (テーブル：y) 位置．」
　そうでなければ「テキストエリア！（自分）作る 180 400 大きさ (テーブル：x) (テーブル：y) 位置．」実行．
　テーブル：x=(テーブル：x)+180.
　テーブル：フラグ=1。
」。

テーブル：配列から作る＝「| |
　arg=_rest！作る。
　field_arr=配列！作る。
　arg!「|i|
　　field_arr! (i!1 読む)　書く。
　」それぞれ実行。
　要素数=(arg!1 読む)!要素数?。

　ret=テーブル！(field_arr) 作る。
　「|j|
　　「j>1」!なら「
　　　arg!「|n i|
　　　　ret!(n!(j) 読む) 書く。
　　　」それぞれ実行。
　　」実行。
　」！(要素数)　繰り返す。
　ret。
」。

テーブル：フィールド名変更＝「||
　_rest！「|n i|
　　フィールド名！(i) (n) 上書き。
　」それぞれ実行。
　自分：フィールド名＝フィールド名。
　自分。
」。

テーブル：欠損値の置換＝「 |option|
　「option=="0置換"」！なら「
　　　自分!「|n i|
　　　　「n=="NA"」!なら「自分！(i) 0 上書き。」実行。
　　　」それぞれ実行。
　　」そうでなければ「option=="平均値置換"」なら「
　　　自分！「|n i|
　　　「n=="NA"」!なら「
　　　　tmp=自分！作る。
　　　　フィールド=フィールド名！(i%(フィールド名！要素数?)) 読む。
　　　　自分！(i) (自分！(フィールド)　平均値　値読み出し) 上書き。
　　　　」実行。
　　　」それぞれ実行。
　　」そうでなければ「
　　　自分！「|n i|
　　　「n=="NA"」!なら「
　　　　tmp=自分！作る。
　　　　フィールド=フィールド名！(i%(フィールド名！要素数?)) 読む。
　　　　自分！(i) (自分！(フィールド)　中央値　値読み出し) 上書き。
　　　 」実行。
　　　」それぞれ実行。
　　」実行。
　自分。
」。
