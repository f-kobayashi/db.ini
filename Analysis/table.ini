//テーブルオブジェクトの定義

配列？＝「（""＋自分）！"]" 含む？」。
テーブル＝配列！作る。
テーブル：x=1+(画面！幅？)/-2.
テーブル：y=(画面！高さ？)/2。
テーブル：分析結果＝配列！作る．

配列：getarg＝「「全部！（自分！配列？）（（自分！1 読む）！配列？）本当」！なら「自分！1 読む」そうでなければ「自分」実行」。
テーブル：作る＝「ret＝自分！create。ret：フィールド名＝_rest！getarg。ret」。
テーブル：書く＝「自分！（_rest！getarg）put」。


テーブル：ファイルから作る＝「｜fn｜
　　tf＝テキストファイル！（fn）作る。
　　dt＝tf！"utf-8" 読む。
　　fld＝（dt！1 読む）！"," 分割。
　　ret＝テーブル！（fld）作る。
　　「｜i｜「i＞1」！なら「ret！（（dt！（i）読む）！"," 分割）書く。」実行。」！（dt！要素数？）繰り返す。
　　ret。
」。

テーブル：値読み出し＝「
　val=(自分!1 読む)!1 読む。
　val。
」。

テーブル：文字数カウント=「| Str |
　length=Str！長さ？。
　sum=0。
　「| n |
　　「全部！(((Str！( n ) 1 部分)！文字コード 10 進数) >31) (((Str！( n ) 1 部分)！文字コード 10 進数) <127) 本当」！なら
　　「sum=sum+1」そうでなければ
　　「sum=sum+2」実行。
　　」！ (length)  繰り返す。
　sum。
」。


テーブル：表示＝「| ; space max adjust_array charnum_array tmp_arr tmp_arr2 |
　space="".
　max=0.
　adjust_array=配列！作る．
　charnum_array=配列！作る．
　tmp_arr=配列！作る．
　tmp_arr2=配列！作る．
　tmp_field=自分：フィールド名！create.
　s=""．
　「| i |
　　sum=0.
　　Str=tmp_field！ (i) 読む。
　　sum=自分！(Str) 文字数カウント。
　　max=sum。
　　自分！「| val j |
　　　sum=0.
　　　Str=(val! (i) 読む)+""．
　　　sum=自分！(Str) 文字数カウント。
　　　「max < sum 」！なら「max = sum 」実行．
　　」それぞれ実行．
　　charnum_array！(max) 書く．
　　max=0．
　」！(自分:フィールド名！ 要素数？)  繰り返す．

　charnum_array！「|n i|
　　sum=0.
　　Str=tmp_field！(i) 読む．
　　sum=自分!(Str) 文字数カウント。
　　「 space=(space) + " "  」!  ((n)-(sum)) 繰り返す．
　　tmp_field！(i) ((space) + (tmp_field！(i) 読む) + "|" ) 上書き．
　　space="".

　　自分！「| m ; s|
　　　Str=((m!(i) 読む)+"")。
　　　sum=自分！(Str) 文字数カウント。
　　　s=n-sum。
　　　「 space=(space) + " "  」! (s) 繰り返す．
　　　tmp_arr！1 ( (space) + (m!(i) 読む) + "|" )  上書き．
　　　tmp_arr2！ ( tmp_arr! 作る ) 書く．
　　　space="".
　　」それぞれ実行．

　　tmp_arr2！「| m j |
　　　「i == 1」！なら「adjust_array！(m!作る) 書く．」
　　　そうでなければ「
　　　(adjust_array！(j) 読む)！ (m! 1 読む) 書く．
　　　」実行．
　　」それぞれ実行．
　　tmp_arr2！クリア．
　」それぞれ実行．

　len＝「(（""+（自分！1 読む））！長さ？) > (（""+（tmp_field））!長さ？)」！なら「（""+（自分！1 読む））！長さ？」そうでなければ「(（""+（tmp_field））!長さ？)」実行。
　「自分：フラグ ！= 1」！なら「
　　lst＝テキストエリア！（""+（tmp_field））（「s=s+"-"」！（len*1.5）繰り返す）作る（len*11）400 大きさ (テーブル：x) (テーブル：y) 位置。」
　そうでなければ「lst＝テキストエリア！（""+（tmp_field））（「s=s+"-"」！（len*1.5）繰り返す）作る（len*11）400 大きさ (テーブル：x) (テーブル：y) 位置.」実行．
　lst！（adjust_array）書く。
　テーブル：x=(テーブル：x)+(len*11)。
　テーブル：フラグ=1。
　自分。
」。

テーブル：ファイル出力＝「｜fn｜
　　tf＝テキストファイル！（fn）作る。
　　tf！（配列！作る）全部書く。
ラベル！（自分：フィールド名！要素数？）作る。
//　　tf！（自分：フィールド名！"," 結合）書く。
　　自分！「｜r｜ tf！（r！"," 結合）書く」それぞれ実行。
」。

テーブル：分析結果：表示＝「| ; space max adjust_array charnum_array tmp_arr tmp_arr2 |
　「テーブル：フラグ ！= 1」！なら「テキストエリア！（自分）作る 180 400 大きさ (テーブル：x) (テーブル：y) 位置．」
　そうでなければ「テキストエリア！（自分）作る 180 400 大きさ (テーブル：x) (テーブル：y) 位置．」実行．
　テーブル：x=(テーブル：x)+180.
　テーブル：フラグ=1。
」。

テーブル：配列から作る＝「| |
　arg=_rest！作る。
　field_arr=配列！作る。
　arg!「|i|
　　field_arr! (i!1 読む)　書く。
　」それぞれ実行。
　ret=テーブル！(field_arr) 作る。
　「|i|
　　「i>1」!なら「
　　　tmp_arr=配列！作る。
　　　arg!「|n j|
　　　　tmp_arr!(n!(i) 読む) 書く。
　　　」それぞれ実行。
　　　ret!(tmp_arr)　書く。
　　」実行。
　」!((_rest!1 読む)! 要素数?)　繰り返す。
　ret。
」。
