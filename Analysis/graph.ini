//グラフオブジェクト
グラフ＝タートル！作る 消える 図形を作る．
グラフ：_XORIGIN=0.
グラフ：_YORIGIN=0.
グラフ：_WIDTHCOL=(画面！幅？)/1419．
グラフ：_HEIGHTCOL=(画面！高さ？)/766．
グラフ：_PRANGE=45.
グラフ：_XINTERVAL=100.
グラフ：_YINTERVAL=60.
グラフ：_XNUMCOL=1.
グラフ：_LABELCOL=15.
グラフ：_YLOWERLIM=0.
グラフ：_YRANGE=300.
グラフ：_CHARSIZE=15。
グラフ：_DACOL=1.
グラフ：_YSCALE=undef.
グラフ：f1 = "".
グラフ：f2 = "".

// 箱ひげ、棒、折れ線
グラフ：ｘ軸データ＝「｜data_arr｜
　data_arr!「 |data cnt|
　　ラベル！(data！1 読む) 作る 10 文字サイズ ((_XORIGIN)+(_XINTERVAL)*(cnt)) ((_YORIGIN)-20)  位置．
　」それぞれ実行．
　グラフ:_WIDTH = (((data_arr！要素数？)+1)*(_XINTERVAL))。
　自分。
　//描画！(((data_arr！要素数？)+1)*(_XINTERVAL)) 歩く 図形を作る ．
」．

グラフ:x軸描画＝「
  描画＝タートル！作る。
  col=色!0xBDBDBD 作る。
  描画！2 線の太さ ペンなし (_XORIGIN) (_YORIGIN) 位置 ペンあり (グラフ:_WIDTH) 歩く (col) 図形を作る。
  描画！消える。
  自分。
」。



// 箱ひげ、棒、折れ線
グラフ：y軸データ＝「｜data_arr ;digit｜
　描画＝タートル！作る．
　col=色!0xBDBDBD 作る。
　digit=-1.
　data_arr!「 |data cnt|
　　「cnt == 1」！なら「max = (data！1 読む) 」実行．
　　「max < (data！1 読む) 」！なら「max = (data！1 読む) 」実行。
　」それぞれ実行．
「max > 0 」！なら「
　　digit=ceil(log(abs(max))).
　　base=max*1.05。
　　place=10!(floor(log(base))) pow。
　　up1_digit=floor(base/place)。

　　scale=「up1_digit < 2」!なら「place*0.2」
　　　　　　そうでなければ「
　　　　　　　「up1_digit < 5」!なら「 place * 0.5」
　　　　　　　そうでなければ「place」実行。
　　　　　　」実行。

　　段数=floor(base/scale+1)。
　　up_lim=段数*scale.
　」実行。
 「_YSCALE==(undef)」！なら「_YSCALE=scale。 check="ok"」そうでなければ「段数=ceil(up_lim/_YSCALE)」実行。
　グラフ:_DACOL=_YRANGE/up_lim*_HEIGHTCOL。
　「|i|
　　ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ ((_XORIGIN)-abs(15*digit)) ((_YRANGE/段数)*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_YORIGIN)) 位置.
　　「i!=1」！なら「
    　描画！2 線の太さ ペンなし (_XORIGIN) (((_YRANGE/段数)*(i-1))*(_HEIGHTCOL)+(_YORIGIN)) 位置 ペンあり (_WIDTH) 歩く (col)  図形を作る．
　　」実行。
　」！(段数+1) 繰り返す．
　//描画！((_YRANGE)*(_HEIGHTCOL)) 歩く 図形を作る 90 左回り (_XORIGIN) (_YORIGIN) 位置 ．
　描画！消える．
　自分。
」．

//散布図
グラフ：軸設定_散布図＝「|data_arr1 data_arr2 ;digit|
　描画＝タートル！作る 90　左回り。
　col=色!0xBDBDBD 作る。
　グラフ:_WIDTH = ((_YRANGE)*(_HEIGHTCOL))。
  //横軸
　digit=-1.
　data_arr1!「 |data cnt|
　　「cnt == 1」！なら「max = (data！1 読む) 」実行．
　　「max < (data！1 読む) 」！なら「max = (data！1 読む) 」実行。
　」それぞれ実行．
　「max > 0 」！なら「
　　digit=ceil(log(abs(max))).
　　base=max*1.05。
　　place=10!(floor(log(base))) pow。
　　up1_digit=floor(base/place)。

　　scale=「up1_digit < 2」!なら「place*0.2」
　　　　　　そうでなければ「
　　　　　　　「up1_digit < 5」!なら「 place * 0.5」
　　　　　　　そうでなければ「place」実行。
　　　　　　」実行。

　　段数=floor(base/scale+1)。
　　up_lim=段数*scale.
　」実行。
　グラフ:_DACOL_散布1=_YRANGE/up_lim*_HEIGHTCOL.
　「_YSCALE==(undef)」！なら「_YSCALE=scale。 check="ok"」そうでなければ「段数=ceil(up_lim/_YSCALE)」実行。
　「|i|
　　ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ (((_YRANGE)/(段数))*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_XORIGIN)-20) ((_YORIGIN)-abs(5*digit)) 位置.
　　「i!=1」！なら「
    　描画！2 線の太さ ペンなし (((_YRANGE/段数)*(i-1))*(_HEIGHTCOL)+(_XORIGIN)) (_YORIGIN) 位置 ペンあり (_WIDTH) 歩く (col)  図形を作る．
　　」実行。
　」！(段数+1) 繰り返す．
　
　//縦軸
　描画！90 右回り。
　digit=-1.
　data_arr2!「 |data cnt|
　　「cnt == 1」！なら「max = (data！1 読む) 」実行．
　　「max < (data！1 読む) 」！なら「max = (data！1 読む) 」実行。
　」それぞれ実行．
「max > 0 」！なら「
　　digit=ceil(log(abs(max))).
　　base=max*1.05。
　　place=10!(floor(log(base))) pow。
　　up1_digit=floor(base/place)。

　　scale=「up1_digit < 2」!なら「place*0.2」
　　　　　　そうでなければ「
　　　　　　　「up1_digit < 5」!なら「 place * 0.5」
　　　　　　　そうでなければ「place」実行。
　　　　　　」実行。

　　段数=floor(base/scale+1)。
　　up_lim=段数*scale.
　」実行。
　グラフ:_DACOL_散布2=_YRANGE/up_lim*_HEIGHTCOL.
　「check=="ok"」！なら「_YSCALE=scale. check=""」そうでなければ「段数=ceil(up_lim/_YSCALE)」実行。
　「|i|
　　ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ ((_XORIGIN)-abs(15*digit)) (((_YRANGE)/(段数))*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_YORIGIN)) 位置.
　　「i!=1」！なら「
    　描画！2 線の太さ ペンなし (_XORIGIN) (((_YRANGE/段数)*(i-1))*(_HEIGHTCOL)+(_YORIGIN)) 位置 ペンあり (_WIDTH) 歩く (col)  図形を作る．
　　」実行。
　」！(段数+1) 繰り返す．
　//描画！消える．
　自分。
」。

グラフ：軸仕上げ_散布図＝「|描画|
    描画！2 線の太さ ペンなし (_XORIGIN) (_YORIGIN) 位置  ペンあり (_WIDTH) 歩く 。
    描画！ペンなし 90 左回り (_XORIGIN) (_YORIGIN) 位置  ペンあり (_WIDTH) 歩く (色!0xBDBDBD 作る) 図形を作る。
    描画！消える。
    自分。
」。


//帯グラフ
グラフ：軸設定_帯＝「|arg|
    グラフ：_YLOWERLIM = _YORIGIN-20 。
    描画＝タートル！作る。
    描画！ペンなし (色!0xBDBDBD 作る) 線の色 2 線の太さ 90 左回り (_XORIGIN) (_YORIGIN) 位置。
    「 | i | 描画！ペンなし (_XORIGIN+i*40) (_YORIGIN) 位置  ペンあり (_XORIGIN+i*40) (_YORIGIN+_MAXHEIGHT) 位置。
    」！ 10 繰り返す 図形を作る。
    「 | i | ラベル！ (((i-1)*20)+"%")  作る (-5+(_XORIGIN)+(i-1)*(_WIDTH/5)) (_YLOWERLIM)  位置 10  文字サイズ。
    」！ 6 繰り返す。
    描画!90 右回り。
    //縦軸ラベル
    arg!「| val i|
        ラベル！(val) 作る  (_XORIGIN-55)  (_YORIGIN+(_MAXHEIGHT-25)-70*(i-1)-15) 位置 15 文字サイズ。
    」それぞれ実行。
    描画。
」。

グラフ：軸仕上げ_帯＝「|描画|
    描画！2 線の太さ ペンなし 90 左回り (_XORIGIN) (_YORIGIN) 位置  ペンあり (_XORIGIN) (_YORIGIN+_MAXHEIGHT) 位置 (色!0xBDBDBD 作る) 図形を作る。
    描画！消える。
    自分。
」。


グラフ：原点＝「| x y |
　グラフ：_XORIGIN = x。
　グラフ：_YORIGIN = y。
　自分。
」。

グラフ：縦軸間隔＝「｜val｜
　グラフ：_YSCALE = val.
　自分。
」．

グラフ:ラベル折り返し表示＝「| 文字列 x y |
　end=(文字列！長さ?)-5。
　a= 文字列！1 5 部分  。
　b= 文字列！6 (end) 部分。
　c=ラベル ! (a) 作る (x) (y) 位置 (_CHARSIZE) 文字サイズ 100 15 大きさ。
　ラベル！(b) 作る (x) (y-(c!高さ?)) 位置 (_CHARSIZE) 文字サイズ。
」。

グラフ:着色=「| i |
    「i%8 == 1」！なら「col = 色！ 0x5858FA 作る」そうでなければ
    「i%8 == 2」なら「col = 色！ 0xA9A9F5 作る」そうでなければ
    「i%8 == 3」なら「col = 色！ 0xA9F5F2 作る」そうでなければ
    「i%8 == 4」なら「col = 色！ 0xA9F5A9 作る」そうでなければ
    「i%8 == 5」なら「col = 色！ 0xF2F5A9 作る」そうでなければ
    「i%8 == 6」なら「col = 色！ 0xF5D0A9 作る」そうでなければ
    「i%8 == 7」なら「col = 色！ 0xF5A9A9 作る」そうでなければ
    「i%8 == 0」なら「col = 色！ 0xFA5858 作る」実行．
    col。
」。

テーブル：正規分布=「| ave sdiv|
　_正規分布=グラフ！作る。
　_正規分布：_DATA=自分。
　_正規分布：_ave=(ave!1 読む)!1 読む。
　_正規分布：_sdiv=(sdiv!1 読む)!1 読む。
　_正規分布:描画＝「
　　x=(_ave-_sdiv*3)。
　　a=(1/(sqrt(2*PI)*_sdiv))*(exp(((x-_ave)!2 pow)/(-2*(_sdiv!2 pow))))。
　　_col=350/((_ave+_sdiv*3)-(_ave-_sdiv*3)+2)。
　　col=色!0xBDBDBD 作る。
　　プロット＝タートル！作る ペンなし ((x+_XORIGIN)*_col) (a*2000+_YORIGIN) 位置 ペンあり。
　　軸描画＝タートル！作る (col) 線の色。
　　cnt=0.
　　「|i|
　　　F=x+(i-1)。
　　　a=(1/(sqrt(2*PI)*_sdiv))*(exp(((F-_ave)!2 pow)/(-2*(_sdiv!2 pow))))。
　　　プロット！ ((F*1+_XORIGIN)*_col) (a*5000+_YORIGIN) 位置。

　　　「(round(F-_ave)%round(_sdiv))==0」!なら「
　　　　ラベル！(round(x)+i-1) 作る ((F*1+_XORIGIN)*_col) -5 位置 10 文字サイズ。
　　　　縦軸=軸描画！ペンなし (col) 線の色 ((F*1+_XORIGIN)*_col) (_YORIGIN) 位置 ペンあり 90　左回り 250 歩く 90 右回り 図形を作る。
　　　　プロット!ペンなし (黒) 線の色 ((F*1+_XORIGIN)*_col) (a*5000+_YORIGIN) 位置　ペンあり。
　　　」実行。
　　　cnt=cnt+1。
　　」！ ((_ave+_sdiv*3)-(_ave-_sdiv*3)+2) 繰り返す。

　　「| i |
　　　縦軸メモリ＝ラベル!(0.01*(i-1)) 作る。
　　　縦幅=縦軸メモリ!高さ？。
　　　縦軸メモリ! (_ave*_col+_XORIGIN-30) ((i-1)*50+(縦幅/2))　位置 10　文字サイズ。
　　　横軸=軸描画！ペンなし (col) 線の色 ((x+_XORIGIN)*_col)  ((i-1)*50+_YORIGIN)  位置 ペンあり ((cnt)*_col) 歩く 図形を作る。
　　」! 6 繰り返す。

　　縦軸ラベル=ラベル！"確率密度" 作る　((x+_XORIGIN)*_col-80) (140+_YORIGIN) 位置　15　文字サイズ。
　　横軸ラベル=ラベル！"点数" 作る。
　　横幅＝横軸ラベル！幅？。
　　横軸ラベル！(_ave*_col-(横幅/3)+_XORIGIN) (-25+_YORIGIN) 位置 15 文字サイズ。
　　プロット！図形を作る。
　　プロット！消える。
　　軸描画！消える。
　」。
　_正規分布。
」。

テーブル：標準正規分布=「| |
　_標準正規分布=グラフ！作る。
　_標準正規分布:描画＝「
　　x=-4.
　　a=(1/(sqrt(2*PI)))*(exp((x!2 pow)/-2))。
　　col=色!0xBDBDBD 作る。
　　プロット＝タートル！作る ペンなし (x*50+_XORIGIN) (a*500+_YORIGIN) 位置 ペンあり。
　　軸描画＝タートル！作る (col) 線の色。

　　start=-4.1.
　　cnt=0.
　「|i|
　　　x=(start)+(i*0.1).
　　　a=(1/(sqrt(2*PI)))*(exp((x!2 pow)/-2)).
　　　プロット！ (x*50+_XORIGIN) (a*500+_YORIGIN) 位置.
　　「(cnt%10)==0」!なら「
　　　ラベル！(x) 作る (x*50+_XORIGIN) (-5+_YORIGIN) 位置 10 文字サイズ。
　　　縦軸=軸描画！ペンなし (col) 線の色 (x*50+_XORIGIN) (_YORIGIN) 位置 ペンあり 90　左回り 250 歩く 90 右回り 図形を作る。
　　　プロット!ペンなし (黒) 線の色 (x*50+_XORIGIN) (a*500+_YORIGIN) 位置　ペンあり。
　　」実行。
　　cnt=cnt+1。
　」！ 81 繰り返す。

　「| i |
　　縦軸ラベル＝ラベル!(0.1*(i-1)) 作る。
　　縦幅=縦軸ラベル!高さ？。
　　縦軸ラベル! (-25+_XORIGIN) ((i-1)*50+(縦幅/2)+_YORIGIN)　位置 10　文字サイズ。
　　横軸=軸描画！ペンなし (col) 線の色 (-200+_XORIGIN)  ((i-1)*50+_YORIGIN)  位置 ペンあり 400 歩く 図形を作る。
　」! 6 繰り返す。
　プロット！図形を作る。
　プロット！消える。
　軸描画！消える。
　」。
　_標準正規分布。
」。


テーブル：棒グラフ=「|f1 f2|　
　_棒グラフ=グラフ！作る。
　_棒グラフ:_DATA=自分．
　_棒グラフ:f1 = f1。
　_棒グラフ:f2 = f2。
　_棒グラフ:描画=「
　　data_x = _DATA！（f1）射影．
　　data_y = _DATA！（f2）射影．
　　自分！(data_x) x軸データ．
　　自分！(data_y) y軸データ．
　　描画＝タートル！作る。
　　data_y！「| n i |
　　　n=n!1 読む．
　　　描画! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN) 位置 (自分!1 着色) 図形を作る.
　　」それぞれ実行．
　　描画！消える。
　　自分！x軸描画。
　　//グラフ:_YORIGIN = -1*((グラフ:_YRANGE)*(グラフ:_HEIGHTCOL))。
　」．
　_棒グラフ．
」．

テーブル：積み上げ棒グラフ=「| f1 |
  _積み上げ棒グラフ＝グラフ！作る。
  _積み上げ棒グラフ:_DATA=自分。
  _積み上げ棒グラフ:f1 = f1。
  _積み上げ棒グラフ:f2 = _rest。
  _積み上げ棒グラフ:描画=「| |
  　tmp_arr=配列！作る。
  　f2!「| f |
　　　tmp_arr!(配列！(f) 作る) 書く。
　　」それぞれ実行。
　　自分！(tmp_arr) x軸データ。
　　tmp_arr!クリア。
　　f1_arr=_DATA!(f1) 射影。
　　f2!「| f i|
  　　「i==1」！なら「tmp_data = _DATA！(f) 合計値」そうでなければ
  　　「((tmp_data! 1 読む)! 1 読む) < (((_DATA！(f) 合計値)!1 読む)!1 読む) 」なら「tmp_data = _DATA！(f) 合計値」実行。
  　」それぞれ実行。
  　自分！(tmp_data) y軸データ．
  　描画1=タートル！作る。
  　描画2=タートル！作る。
  　f2!「 | f i|
  　　data_arr = _DATA！（f）射影．
  　　y_pos=0。
  　　data_arr!「 | n j |
  　　　n=n!1 読む。
  　　　col= グラフ！(j) 着色。
  　　　描画1! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+y_pos) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+(n)*(_DACOL)+y_pos) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+(n)*(_DACOL)+y_pos) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+y_pos) 位置 (col) 図形を作る。
  　　　y_pos=y_pos+((n)*(_DACOL))。
  　　」それぞれ実行。
  　」それぞれ実行。
  　y_pos = -50。
  　x_pos = (_XORIGIN)+100。
  　f1_arr！「 | val i|
  　　描画2！ペンなし (_XORIGIN+x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (グラフ!(i) 着色) 図形を作る。
  　　自分！(val ! 1 読む) (_XORIGIN+x_pos+20) (_YORIGIN+y_pos+2) ラベル折り返し表示。
  　　x_pos = x_pos + 100。
  　」それぞれ実行。
  　描画1！消える。
  　描画2！消える。
  　自分！x軸描画。
  　//グラフ:_YORIGIN = -1*(100+(グラフ:_YRANGE)*(グラフ:_HEIGHTCOL)-(グラフ:_YORIGIN))。
  」。
  _積み上げ棒グラフ。
」。

テーブル：折れ線グラフ=「|f1|
　_折れ線グラフ＝グラフ！作る．
　_折れ線グラフ:_DATA=自分．
　_折れ線グラフ:f1 = f1。
　_折れ線グラフ:f2 = _rest。
　_折れ線グラフ:描画=「|　|
　　tmp_arr=配列！作る。
　　f2!「| f |
　　　tmp_arr!(配列！(f) 作る) 書く。
　　」それぞれ実行。　
　　自分！(tmp_arr) x軸データ。
　　f2!「| f i |
　　　「i==1」！なら「tmp_data = _DATA！(f) 合計値 」そうでなければ
　　　「((tmp_data! 1 読む)! 1 読む) < (((_DATA！(f) 合計値 )!1 読む)!1 読む) 」なら「tmp_data = _DATA！(f) 合計値」実行。
　　」それぞれ実行。
　　自分！(tmp_data) y軸データ．
　　描画1=タートル！作る。
　　描画2=タートル！作る。
　　data_arr=配列!作る。
　　f2!「 | n |
　　　tmp_arr = _DATA!(n) 射影。
　　　tmp_arr!「| m |
　　　　data_arr!(m!1 読む) 書く。
　　　」それぞれ実行。
　　」それぞれ実行。
　　tmp_arr!クリア。
　　f1_arr=_DATA!(f1) 射影。
　　「|i|
　　　col=グラフ！(i) 着色。
　　　「|j|
　　　　「j==1」!なら「描画1！ペンなし ((_XORIGIN)+(_XINTERVAL)*(j)+(_PRANGE)/2) ((data_arr!((i+(3*(j-1)))) 読む)*(_DACOL)+(_YORIGIN)) 位置 ぺんあり (col) 図形を作る」そうでなければ
　　　　「描画1！((_XORIGIN)+(_XINTERVAL)*(j)+(_PRANGE)/2) ((data_arr!((i+(3*(j-1)))) 読む)*(_DACOL)+(_YORIGIN)) 位置 ペンあり (col) 図形を作る」実行。
　　　　描画！ペンなし ((_XORIGIN)+(_XINTERVAL)*(j)+(_PRANGE)/2) ((data_arr!((i+(3*(j-1)))) 読む)*(_DACOL)+5+(_YORIGIN)) 位置  ペンあり 5  円 (col) 図形を作る．
　　　」!(f2!要素数?) 繰り返す。
　　」!(f1_arr!要素数?)  繰り返す。

　　y_pos = -50。
　　x_pos = (_XORIGIN)+100。
　　f1_arr！「 | val i|
　　　描画2！ペンなし (_XORIGIN+x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (グラフ!(i) 着色) 図形を作る。
　　　ラベル! ((val)！ 1 読む) 作る (_XORIGIN+x_pos+20) (_YORIGIN+y_pos+4) 位置。
　　　x_pos = x_pos + 100。
　　」それぞれ実行。
　　描画1！消える．
　　描画2！消える．
　　自分！x軸描画。
　　グラフ:_YORIGIN = -1*(150+(グラフ:_YRANGE)*(グラフ:_HEIGHTCOL)-(グラフ:_YORIGIN))。
　」．
  _折れ線グラフ．
」．

テーブル：円グラフ=「 |f1 f2|
  _円グラフ=グラフ！作る．
  _円グラフ:_DATA=自分．
  _円グラフ:f1 = f1。
  _円グラフ:f2 = f2。
  _円グラフ:描画=「| i |
    描画＝タートル！作る。
    D_f1=_DATA！(f2) 小さい順 (f1) 射影.
    r=150.  x=90.  x_pos= r+20.  y_pos= -1*r.
    d_arr=_DATA！(f2) 小さい順 (f2) 射影 。
    sum=(((d_arr! (f2) 合計値))!1 読む)!1 読む。
    add=0。
    d_arr!「| val j|
      val=val! 1 読む。
      prop=round((val/sum)*1000)。
      prop=prop/10.
      col= グラフ！(j) 着色。
      long=0。
      描画！ペンなし 0 0 位置．
      チーズ＝「
        描画！ペンあり 1 線の太さ ((r)*cos(x)) ((r)*sin(x)) 位置．
        x=x+1．
        long=long+1.
        描画．
      」! ((prop)*3.62) 繰り返す 0 0 位置 (col) 図形を作る．
      チーズ！(_XORIGIN) (_YORIGIN) 位置。
      「val > 6」！なら「
        ラベル！(prop+"%") 作る (_XORIGIN+(r/3*2)*cos(x-(long/2))-5) (_YORIGIN+(r/3*2)*sin(x-(long/2))) 位置 10 文字サイズ。
      」そうでなければ「
        ラベル！(prop+"%") 作る (_XORIGIN+(r/4*5)*cos(x-(long/2))-5) (_YORIGIN+(r/4*5)*sin(x-(long/2))) 位置 10 文字サイズ。
        描画!ペンなし ((r/4*5)*cos(x-(long/2))) (_YORIGIN+(r/4*5)*sin(x-(long/2))-25)  位置 ペンあり ((r)*cos(x-(long/2))-5) (_YORIGIN+(r)*sin(x-(long/2)))  位置 (黒)  図形を作る。
      」実行。
      描画！ペンなし (_XORIGIN+x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (col) 図形を作る．
      A=ラベル! ((D_f1！ (j) 読む)！ 1 読む) 作る (_XORIGIN+x_pos+15) (_YORIGIN+y_pos+12) 位置 .
      ラベル! (" "+((d_arr！ (j) 読む)！ 1 読む)+"件") 作る (_XORIGIN+x_pos+15+(A!幅？)) (_YORIGIN+y_pos+12) 位置 .
      y_pos = y_pos + 50．
    」それぞれ実行。
    描画！消える．
  」.
  //グラフ:_YORIGIN = -1*(400-(グラフ:_YORIGIN))。
　_円グラフ．
」．

テーブル：帯グラフ=「| f1 |
  _帯グラフ=グラフ！作る。
  _帯グラフ:_DATA=自分。
  _帯グラフ:f1 = f1。
  _帯グラフ:joint_pos=配列！作る。
  _帯グラフ:f2 = _rest。
  _帯グラフ:描画=「|　|
    グラフ:_WIDTH=400。
    plot_pos=25。
    グラフ:_MAXHEIGHT = ((f2!要素数?)*_PRANGE)+(((f2!要素数?)+1)*plot_pos)。
    D_f1=_DATA！(f1) 射影。
    自分！(f2) 軸設定_帯。
    x_pos=_WIDTH + plot_pos。
    y_pos=_MAXHEIGHT/2。
    break_arr=配列!作る。
    「| i |
      d_arr=_DATA! (f2!(i)読む) 射影 。
      sum=((d_arr! (f2!(i)読む) 合計値)!1 読む)!1 読む。
      add=0。
      box_y=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i-1))。
      d_arr!「| val j|
        val=val! 1 読む。
        prop=val/sum。
        col= グラフ！(j) 着色。
        描画！ペンなし (_XORIGIN+add) (box_y) 位置。
        「描画！ペンあり (_WIDTH*prop) 歩く 90  右回り (_PRANGE) 歩く 90 右回り」! 2 繰り返す (col) 図形を作る。
        「(round(prop*1000)/10)>7」!なら「
        　ラベル!((round(prop*1000)/10)+"%") 作る (_XORIGIN+add+(_WIDTH*prop)/2-12)　(box_y-15) 位置 10 文字サイズ。
        」そうでなければ「
        　ラベル!((round(prop*1000)/10)+"%") 作る (_XORIGIN+add+(_WIDTH*prop)/2-12)　(box_y+5) 位置 10 文字サイズ。
        」実行。
        「i==1」!なら「
          描画！ペンなし (_XORIGIN+x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (col) 図形を作る．
          ラベル! ((D_f1！ (j) 読む)！ 1 読む) 作る (_XORIGIN+x_pos+15) (_YORIGIN+y_pos+12) 位置 。
          y_pos = y_pos - 50。
        」実行。
        add = add + (_WIDTH*prop)。
        break_arr!(add) 書く。
      」それぞれ実行。
    」!(f2!要素数) 繰り返す。
    「| i |
      「| j ; x1 y1 x2 y2 |
        「i!=(f2!要素数?)」!なら「
          x1=(break_arr!(j+(i-1)*(d_arr!要素数?)) 読む) + _XORIGIN。
          x2=(break_arr!(j+(d_arr!要素数?)+(i-1)*(d_arr!要素数?)) 読む)+ _XORIGIN。
          y1=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i-1))。
          y2=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i))。
          描画! ペンなし (x1) (y1-_PRANGE) 位置 ペンあり (x2) (y2) 位置 (色!0x5C5C5C 作る) 図形を作る。
        」実行。
      」!(d_arr！要素数?) 繰り返す。
    」!(f2!要素数?) 繰り返す。
    自分！(描画) 軸仕上げ_帯。
  」。
  _帯グラフ。
」。

テーブル:散布図＝「|f1 f2 flag|
　_散布図＝グラフ！作る。
　_散布図:_DATA=自分．
　_散布図:f1 = f1。
　_散布図:f2 = f2。
　_散布図:flag = flag。
　_散布図：描画=「||
　　f1_arr=_DATA!(f1) 射影。
　　f2_arr=_DATA!(f2) 射影。
　　自分！(f1_arr) (f2_arr) 軸設定_散布図。

　　f1_arr!「|val cnt|
      描画！ペンなし ((val!1 読む)*_DACOL_散布1-1+_XORIGIN) (((f2_arr!(cnt) 読む)!1 読む)*_DACOL_散布2-1+_YORIGIN) 位置 ペンあり 2 4 角形　(赤)図形を作る。
　　」それぞれ実行。
　　ラベル！(f1) 作る (_XORIGIN+100) (_YORIGIN-50) 位置 10 文字サイズ。
　　ラベル！(f2) 作る (_XORIGIN-80) (_YORIGIN+130) 位置 10 文字サイズ。
　　//近似曲線：最小二乗法
　　「flag=="true"」！なら「
　　　標準偏差＝_DATA!(f1) 標準偏差 値読み出し。
　　　共分散＝_DATA！(f1) (f2) 共分散 値読み出し。
　　　x平均＝_DATA！(f1) 平均値 値読み出し。
　　　y平均＝_DATA！(f2) 平均値 値読み出し。
　　　傾き＝共分散/(標準偏差! 2 pow)。
　　　切片＝y平均-（傾き*x平均）。
　　　x2=_WIDTH/_DACOL_散布1。
　　　y2=x2*傾き+切片。
　　　ペン＝タートル！作る　ぺんなし　1 線の太さ。
　　　ペン！(_XORIGIN) (_YORIGIN+切片*_DACOL_散布2) 位置　ぺんあり (_XORIGIN+x2*_DACOL_散布1) (_YORIGIN+y2*_DACOL_散布2)　位置　(青) 図形を作る。
　　　ラベル！("y="+(傾き)+"x+"+(切片)) 作る 10 文字サイズ　(_XORIGIN+x2*_DACOL_散布1+10) (_YORIGIN+y2*_DACOL_散布2) 位置。
　　　ペン！消える。
　　」実行。
　　自分！(描画) 軸仕上げ_散布図。
　」。
　_散布図。
」。

テーブル：箱ひげ図=「 |f1 f2|
　_箱ひげ図＝グラフ！作る．
　_箱ひげ図:_DATA=自分．
　_箱ひげ図:f1 = f1。
　_箱ひげ図:f2 = f2。

　_箱ひげ図：描画=「||
　　描画＝タートル！作る．
　　描画！消える．
　　//一つ目の引数(x軸の要素)を取得し値の重複を除く．
　　f1_arr=_DATA！(f1) 重複．
　　f1_num＝0．
　　f2_num＝0．
　　data_y = _DATA！(f2）射影．
　　自分！(f1_arr) x軸データ．
　　自分！(data_y) y軸データ．

　　//引数に取られたフィールドがそれぞれ何番目の要素であるかを調べる
　　「｜番号｜
　 　 「（_DATA:フィールド名！（番号）読む）＝＝ (f1)」！なら
　  　「f1_num＝番号。」そうでなければ
　  　「（_DATA:フィールド名！（番号）読む）＝＝ (f2)」なら
　  　「f2_num＝番号。」実行。
　　」！（_DATA:フィールド名！要素数？）繰り返す。
　　two_arr=配列!作る．
　　tmp_arr=配列!作る.
　　param_arr=配列!作る．
　　higher_outliers_arr=配列!作る．
　　lower_outliers_arr=配列!作る．
　　// 第一引数のフィールドに「f1_arr」の要素を持つものごとの配列「tmp_arr」を作る(※選択はテーブルオブジェクト内部からは使えないため配列を読んでいる)
　　//「tmp_arr」の配列である「two_arr」配列を作る．
　　f1_arr！「|n|
　 　 _DATA！「| val |
  　  「(val！(f1_num) 読む) == (n！1 読む)」！なら
  　  「tmp_arr！(val)書く」実行．
  　」それぞれ実行．
  　  two_arr！(tmp_arr)書く．
  　  tmp_arr=配列!作る.
　　」それぞれ実行．

　　//「two_arr」の要素ごとに，「最大」「第一四分位数」「中央値」「第三四分位数」「最小」を求め配列とし，その配列の配列をもつ「param_arr」を作る．
　　two_arr!「| val count ;field_arr max qua3 qua2 qua1 min ave tmp_arr2|
  　　field_arr=配列！作る．
  　　「| count |
    　  field_arr!(count)書く．
  　　」！（_DATA:フィールド名！要素数？）繰り返す。
  　　tmp_ret = テーブル！(field_arr) 作る.
  　　val!「| value |
    　　tmp_ret ! (value)書く．
  　　」それぞれ実行．

  　　//外れ値を求める．
  　　IRQ=0.
  　　_DATA：分析結果！("+++++"+(f1_arr！(count) 読む) + "++++++") 書く．
  　　qua3 = (tmp_ret!(f2_num)第3四分位数)！1 読む．
  　　qua2 = (tmp_ret!(f2_num)中央値)！1 読む．
  　　qua1 = (tmp_ret!(f2_num)第1四分位数)！1 読む．
  　　ave= (tmp_ret!(f2_num)平均値)！1 読む．
　　　IRQ=(qua3！1 読む)-(qua1！1 読む).
　　　del_cnt_arr=配列！作る．
　　　tmp_ret！「| n c |
　　　　「((qua3！1 読む) + ((IRQ)*1.5)) < (n！(f2_num) 読む)」！なら「
　　　　　　higher_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　　　　del_cnt_arr！(c) 書く.
　　　　」そうでなければ「((qua1！1 読む) - ((IRQ)*1.5)) > (n！(f2_num) 読む)」なら「
　　　　　lower_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　　　del_cnt_arr！(c) 書く.
　　　　」実行．
  　　」それぞれ実行．
　　　cnt=0．
　　　del_cnt_arr！「|n| tmp_ret！ (n-cnt) 位置で消す．cnt=cnt+1」それぞれ実行．
　 　 max = (tmp_ret！(f2_num)最大値)！1 読む．
  　　min = (tmp_ret！(f2_num)最小値)！1 読む．
  　　tmp_arr2 = 配列！(max)(qua3)(qua2)(qua1)(min)(ave)(higher_outliers_arr！作る)(lower_outliers_arr！作る) 作る．
  　　param_arr！(tmp_arr2)書く．
  　　higher_outliers_arr！クリア．
  　　lower_outliers_arr！クリア．
　　」それぞれ実行.
　　tmp_arr = _DATA！(f2)　射影。
　　//ここからグラフ描画　
　　param_arr!「｜data_arr  i ;ly1 ly2 sy1 sy2 min｜
　　　data_arr！「| n j |
　　　　「j <= 5 」！なら「描画！ペンなし (_XORIGIN+(_XINTERVAL)*(i)) (_YORIGIN+(_DACOL)*(n！1 読む)) 位置 ペンあり (_PRANGE) 歩く 図形を作る．」
　　　　そうでなければ「j == 6」なら「
　　　　　描画！ぺんなし  (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)-((20/sqrt(2))/2)) (_YORIGIN+(n！1 読む)*(_DACOL)+((20/sqrt(2))/2)) 位置 45 右回り ぺんあり 20 歩く 位置 45 左回り 図形を作る．
　　　　　描画！ぺんなし  (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)-((20/sqrt(2))/2)) (_YORIGIN+(n！1 読む)*(_DACOL)-((20/sqrt(2))/2)) 位置 45 左回り ぺんあり 20 歩く 位置 45 右回り 図形を作る．
　　　　」そうでなければ「n！「| m | 描画！ぺんなし  (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)) (_YORIGIN+(m！1 読む)*(_DACOL)) 位置 ぺんあり 3 円 図形を作る．」それぞれ実行．
　　　　」実行．
　　　」それぞれ実行．
　　　描画！ペンなし (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)) (_YORIGIN+((data_arr！ 1 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)) (_YORIGIN+((data_arr！ 2 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)) (_YORIGIN+((data_arr！ 4 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*(i)+((_PRANGE)/2)) (_YORIGIN+((data_arr！ 5 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし (_XORIGIN+(_XINTERVAL)*(i)) (_YORIGIN+((data_arr！ 2 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*(i)) (_YORIGIN+((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし (_XORIGIN+(_XINTERVAL)*(i)+(_PRANGE)) (_YORIGIN+((data_arr！ 2 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*(i)+(_PRANGE)) (_YORIGIN+((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　」それぞれ実行．
　　自分！x軸描画。
　　//グラフ:_YORIGIN = -1*(100+(グラフ:_YRANGE)*(グラフ:_HEIGHTCOL)-(グラフ:_YORIGIN))。
　」．
　_箱ひげ図．
」．
