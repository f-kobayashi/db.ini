//グラフオブジェクト
グラフ＝タートル！作る 消える 図形を作る．
グラフ：_XORIGIN=0.
グラフ：_YORIGIN=0.
グラフ：_WIDTHCOL=(画面！幅？)/1419．
グラフ：_HEIGHTCOL=(画面！高さ？)/766．
グラフ：_PLOT_RANGE=45.
グラフ：_XINTERVAL=100.
グラフ：_YINTERVAL=60.
グラフ：_XNUMCOL=1.
グラフ：_LABELCOL=15.
グラフ：_YLOWERLIM=0.
グラフ：_YRANGE=300.
グラフ：_DACOL=1.
グラフ：_YSCALE=50.

グラフ：ｘ軸データ＝「｜data_arr｜
　描画＝タートル！作る．
　data_arr!「 |data cnt|
　　ラベル！(data！1 読む) 作る 10 文字サイズ ((_XINTERVAL)*(cnt)) ((_YLOWERLIM)-20)  位置．
　」それぞれ実行．
　描画！(((data_arr！要素数？)+1)*(_XINTERVAL)) 歩く 図形を作る ．
　描画！消える．
」．

グラフ：y軸データ＝「｜data_arr ;digit｜
　描画＝タートル！作る．
　digit=-1.
　data_arr!「 |data cnt|
　　「cnt == 1」！なら「max = (data！1 読む) 」実行．
　　「max < (data！1 読む) 」！なら「max = (data！1 読む) 」実行
　」それぞれ実行．
　「max > 1 」！なら「
　　digit=ceil(log(abs(max))).
　　「digit != 1」！なら「max=ceil(max/(10！(digit-1) pow)).　max=max*(10！(digit-1) pow).」
　　そうでなければ「max=10. digit=1.」実行．
　」そうでなければ「
　　「max < 1」！の間「max=max*10. digit=digit-1.」実行．
　　　max=ceil(max/(10!(abs(digit)-1) pow)).
　　　max=max/(10!(abs(digit)-2) pow).
　」実行．
　times=max/_YSCALE.
　グラフ:_DACOL=_YRANGE/max*_HEIGHTCOL.
　「|i|
　　ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ ((_XORIGIN)-abs(15*digit)) (((_YRANGE)/(times))*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_YORIGIN)) 位置.
　　描画！ペンなし (_XORIGIN) ((((_YRANGE)/(times))*(i-1)+(_YORIGIN))*(_HEIGHTCOL)) 位置 ペンあり 20 歩く 図形を作る．
　」！(times+1) 繰り返す．
　描画！((_YRANGE)*(_HEIGHTCOL)) 歩く 図形を作る 90 左回り (_XORIGIN) (_YORIGIN) 位置 ．
　描画！消える．
」．

グラフ：y軸目盛り間隔＝「｜val｜
　グラフ：_YSCALE = val.
」．

グラフ：棒グラフ=「|_rest|　
　グラフ:_DATA=_rest．
　棒グラフ＝グラフ！作る．
　棒グラフ:描画=「 |f1 f2|
　　data_x = _DATA！（f1）射影．
　　data_y = _DATA！（f2）射影．
　　自分！(data_x) x軸データ．
　　自分！(data_y) y軸データ．
　　data_y！「| n i |
　　　n=n!1 読む．
　　　描画! ペンなし ((_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XINTERVAL)*(i)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) (_YORIGIN) 位置 図形を作る.
　　」それぞれ実行．
　」．
　棒グラフ．
」．

グラフ：折れ線グラフ=「|_rest|　
　グラフ:_DATA=_rest．
　折れ線グラフ＝グラフ！作る．
　折れ線グラフ:描画=「 |f1 f2|
　　data_x = _DATA！（f1）射影．
　　data_y = _DATA！（f2）射影．
　　自分！(data_x) x軸データ．
　　自分！(data_y) y軸データ．
　　data_y！「| n i |
　　　n=n!1 読む．
　　　「i == 1」！なら「描画! ペンなし ((_XINTERVAL)*(i)+(_PLOT_RANGE)/2) ((n)*(_DACOL)) 位置 ペンあり 図形を作る.」そうでなければ
　　　「描画! ((_XINTERVAL)*(i)+(_PLOT_RANGE)/2) ((n)*(_DACOL)) 位置 ペンあり 図形を作る.」実行．
　　」それぞれ実行．
　　data_y！「| n i |
　　　n=n!1 読む．
　　　描画！ペンなし ((_XINTERVAL)*(i)+(_PLOT_RANGE)/2) ((n)*(_DACOL)+5) 位置  ペンあり 5　円 (赤)　図形を作る．
　　」それぞれ実行．
　」．
　折れ線グラフ．
」．


グラフ:箱ひげグラフ=「 |_rest|
　グラフ:_DATA=_rest．
　箱ひげグラフ＝グラフ！作る．

　箱ひげグラフ：描画=「|f1 f2|
　　描画＝タートル！作る．
　　描画！消える．
　　//一つ目の引数(x軸の要素)を取得し値の重複を除く．
　　f1_arr=_DATA！(f1) 重複．
　　f1_num＝0．
　　f2_num＝0．
　　data_y = _DATA！（f2）射影．
　　自分！(f1_arr) x軸データ．
　　自分！(data_y) y軸データ．

　　//引数に取られたフィールドがそれぞれ何番目の要素であるかを調べる
　　「｜番号｜
　 　 「（_DATA:フィールド名！（番号）読む）＝＝ (f1)」！なら
　  　「f1_num＝番号。」そうでなければ
　  　「（_DATA:フィールド名！（番号）読む）＝＝ (f2)」なら
　  　「f2_num＝番号。」実行。
　　」！（_DATA:フィールド名！要素数？）繰り返す。

　　two_arr=配列!作る．
　　tmp_arr=配列!作る.
　　param_arr=配列!作る．
　　higher_outliers_arr=配列!作る．
　　lower_outliers_arr=配列!作る．
　　// 第一引数のフィールドに「f1_arr」の要素を持つものごとの配列「tmp_arr」を作る(※選択はテーブルオブジェクト内部からは使えないため配列を読んでいる)
　　//「tmp_arr」の配列である「two_arr」配列を作る．
　　f1_arr！「|n|
　 　 _DATA！「| val |
  　  「(val！(f1_num) 読む) == (n！1 読む)」！なら
  　  「tmp_arr！(val)書く」実行．
  　」それぞれ実行．
  　  two_arr！(tmp_arr)書く．
  　  tmp_arr=配列!作る.
　　」それぞれ実行．

　　//「two_arr」の要素ごとに，「最大」「第一四分位数」「中央値」「第三四分位数」「最小」を求め配列とし，その配列の配列をもつ「param_arr」を作る．
　　two_arr!「| val count ;field_arr max qua3 qua2 qua1 min ave tmp_arr2|
  　　field_arr=配列！作る．
  　　「| count |
    　  field_arr!(count)書く．
  　　」！（_DATA:フィールド名！要素数？）繰り返す。
  　　tmp_ret = テーブル！(field_arr) 作る.
  　　val!「| value |
    　　tmp_ret ! (value)書く．
  　　」それぞれ実行．

  　　//外れ値を求める．
  　　IRQ=0.
  　　_DATA：分析結果！("+++++"+(f1_arr！(count) 読む) + "++++++") 書く．
  　　qua3 = (tmp_ret!(f2_num)第3四分位数)！1 読む．
  　　qua2 = (tmp_ret!(f2_num)中央値)！1 読む．
  　　qua1 = (tmp_ret!(f2_num)第1四分位数)！1 読む．
  　　ave= (tmp_ret!(f2_num)平均値)！1 読む．
　　　IRQ=(qua3！1 読む)-(qua1！1 読む).
　　　del_cnt_arr=配列！作る．
　　　tmp_ret！「| n c |
　　　　「((qua3！1 読む) + ((IRQ)*1.5)) < (n！(f2_num) 読む)」！なら「
　　　　　　higher_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　　　　del_cnt_arr！(c) 書く.
　　　　」そうでなければ「((qua1！1 読む) - ((IRQ)*1.5)) > (n！(f2_num) 読む)」なら「
　　　　　lower_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　　　del_cnt_arr！(c) 書く.
　　　　」実行．
  　　」それぞれ実行．
　　　cnt=0．
　　　del_cnt_arr！「|n| tmp_ret！ (n-cnt) 位置で消す．cnt=cnt+1」それぞれ実行．
　 　 max = (tmp_ret！(f2_num)最大値)！1 読む．
  　　min = (tmp_ret！(f2_num)最小値)！1 読む．
  　　tmp_arr2 = 配列！(max)(qua3)(qua2)(qua1)(min)(ave)(higher_outliers_arr！作る)(lower_outliers_arr！作る) 作る．
  　　param_arr！(tmp_arr2)書く．
  　　higher_outliers_arr！クリア．
  　　lower_outliers_arr！クリア．
　　」それぞれ実行.
　　tmp_arr = _DATA！(f2)　射影。
　　//ここからグラフ描画　
　　param_arr!「｜data_arr  i ;ly1 ly2 sy1 sy2 min｜
　　　data_arr！「| n j |
　　　　「j <= 5 」！なら「描画！ペンなし ((_XINTERVAL)*(i)) ((_DACOL)*(n！1 読む)) 位置 ペンあり (_PLOT_RANGE) 歩く 図形を作る．」
　　　　そうでなければ「j == 6」なら「
　　　　　描画！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)-((20/sqrt(2))/2)) ((n！1 読む)*(_DACOL)+((20/sqrt(2))/2)) 位置 45 右回り ぺんあり 20 歩く 位置 45 左回り 図形を作る．
　　　　　描画！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)-((20/sqrt(2))/2)) ((n！1 読む)*(_DACOL)-((20/sqrt(2))/2)) 位置 45 左回り ぺんあり 20 歩く 位置 45 右回り 図形を作る．
　　　　」そうでなければ「n！「| m | 描画！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) ((m！1 読む)*(_DACOL)) 位置 ぺんあり 3 円 図形を作る．」それぞれ実行．
　　　　」実行．
　　　」それぞれ実行．
　　　描画！ペンなし ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 1 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 2 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 4 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 5 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし ((_XINTERVAL)*(i)) (((data_arr！ 2 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり ((_XINTERVAL)*(i)) (((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　　描画！ペンなし ((_XINTERVAL)*(i)+(_PLOT_RANGE)) (((data_arr！ 2 読む)！1 読む)*(_DACOL))
　　　位置 ペンあり ((_XINTERVAL)*(i)+(_PLOT_RANGE)) (((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　」それぞれ実行．
　」．
　箱ひげグラフ．
」．





グラフ:分析データから作る=「 |data_x data_y|
　「_TYPE=="棒グラフ"」！なら「
　　グラフ！(data_x) x軸データ．
　　グラフ！(data_y) y軸データ．
　　data_y！「| n i |
　　　n=n!1 読む．
　　　描画! ペンなし ((_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XINTERVAL)*(i)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) (_YORIGIN) 位置 図形を作る.
　　」それぞれ実行．
　」実行．
」．
