//グラフ描画の定義
テーブル：箱ひげグラフ＝「| f1 f2 |

	//一つ目の引数(x軸の要素)を取得し値の重複を除く．
	f1_arr=自分！(f1) 重複．
	f1_num＝０．
	f2_num＝０．
	IRQ=0.
	
	//引数に取られたフィールドがそれぞれ何番目の要素であるかを調べる
	「｜番号｜
		「（フィールド名！（番号）読む）＝＝ (f1)」！なら
		「f1_num＝番号。」そうでなければ
		「（フィールド名！（番号）読む）＝＝ (f2)」なら
		「f2_num＝番号。」実行。
	」！（フィールド名！要素数？）繰り返す。


	two_arr=配列!作る．
	tmp_arr=配列!作る.
	param_arr=配列!作る．
	higher_outliers_arr=配列!作る．
	lower_outliers_arr=配列!作る．

	// 第一引数のフィールドに「f1_arr」の要素を持つものごとの配列「tmp_arr」を作る(※選択はテーブルオブジェクト内部からは使えないため配列を読んでいる)
	//「tmp_arr」の配列である「two_arr」配列を作る．
	f1_arr！「|n|
		自分！「| val |
			「(val！(f1_num)読む) == (n！1 読む)」！なら
			「tmp_arr！(val)書く」実行．
		」それぞれ実行．
			two_arr！(tmp_arr)書く．
			tmp_arr=配列!作る.
	」それぞれ実行．
	
	//「two_arr」の要素ごとに，「最大」「第一四分位数」「中央値」「第三四分位数」「最小」を求め配列とし，その配列の配列をもつ「param_arr」を作る．
	two_arr!「| val count ;field_arr max qua3 qua2 qua1 min ave tmp_arr2|
		field_arr=配列！作る．
		「| count |
				field_arr!(count)書く．
		」！（フィールド名！要素数？）繰り返す。
		tmp_ret = テーブル！(field_arr) 作る.
		val!「| value |
			tmp_ret ! (value)書く．
		」それぞれ実行．
		
		//外れ値を求める．
		qua3 = (tmp_ret!(f2_num)第3四分位数)！1 読む．
		qua2 = (tmp_ret!(f2_num)中央値)！1 読む．
		qua1 = (tmp_ret!(f2_num)第1四分位数)！1 読む．
		ave= (tmp_ret!(f2_num)平均値)！1 読む．
　IRQ=(qua3！1 読む)-(qua1！1 読む).

　tmp_ret！「| n c |
　　「((qua3！1 読む) + ((IRQ)*1.5)) < (n！(f2_num) 読む)」！なら「
　　　higher_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　tmp_ret！(c) 位置で消す．
　　」そうでなければ「((qua1！1 読む) - ((IRQ)*1.5)) > (n！(f2_num) 読む)」なら「
　　　lower_outliers_arr！(配列 ！(n！(f2_num) 読む) 作る) 書く．
　　　tmp_ret！(c) 位置で消す．
　　」実行．
		」それぞれ実行．
		
		max = (tmp_ret！(f2_num)最大値)！1 読む．
		min = (tmp_ret！(f2_num)最小値)！1 読む．
		tmp_arr2 = 配列！(max)(qua3)(qua2)(qua1)(min)(ave)(higher_outliers_arr！作る)(lower_outliers_arr！作る) 作る．
		param_arr！(tmp_arr2)書く．
		higher_outliers_arr！クリア．
		lower_outliers_arr！クリア．
	」それぞれ実行.
　
　tmp_arr = 自分！(f2)　射影。

　//グラフのもと作成
　テーブル：_DATA=f1_arr.
　自分！(f2) 最大値．
　自分！(f2) 最小値．
　自分！グラフのもと．
	//ここからグラフ描画
	かめた=タートル!作る.　
　param_arr!「｜data_arr  i ;ly1 ly2 sy1 sy2 min｜
　　data_arr！「| n j |
　　　「j <= 5 」！なら「かめた！ペンなし ((_XINTERVAL)*(i)) ((_DACOL)*(n！1 読む)) 位置 ペンあり (_PLOT_RANGE) 歩く 図形を作る．」
　　　そうでなければ「j == 6」なら「
　　　　かめた！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)-((20/sqrt(2))/2)) ((n！1 読む)*(_DACOL)+((20/sqrt(2))/2)) 位置 45 右回り ぺんあり 20 歩く 位置 45 左回り 図形を作る．
　　　　かめた！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)-((20/sqrt(2))/2)) ((n！1 読む)*(_DACOL)-((20/sqrt(2))/2)) 位置 45 左回り ぺんあり 20 歩く 位置 45 右回り 図形を作る．
　　　」そうでなければ「n！「| m | かめた！ぺんなし  ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) ((m！1 読む)*(_DACOL)) 位置 ぺんあり 3 円 図形を作る．」それぞれ実行．
　　　」実行．
　　」それぞれ実行．
　　かめた！ペンなし ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 1 読む)！1 読む)*(_DACOL)) 
　　位置 ペンあり ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 2 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　かめた！ペンなし ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 4 読む)！1 読む)*(_DACOL)) 
　　位置 ペンあり ((_XINTERVAL)*(i)+((_PLOT_RANGE)/2)) (((data_arr！ 5 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　かめた！ペンなし ((_XINTERVAL)*(i)) (((data_arr！ 2 読む)！1 読む)*(_DACOL)) 
　　位置 ペンあり ((_XINTERVAL)*(i)) (((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
　　かめた！ペンなし ((_XINTERVAL)*(i)+(_PLOT_RANGE)) (((data_arr！ 2 読む)！1 読む)*(_DACOL)) 
　　位置 ペンあり ((_XINTERVAL)*(i)+(_PLOT_RANGE)) (((data_arr！ 4 読む)！1 読む)*(_DACOL)) 位置 図形を作る．
	」それぞれ実行．
	
	f1_arr !「| n i | ラベル！(n！1 読む) 作る 10 文字サイズ ((_XINTERVAL)*(i)) ((_YLOWERLIM)-20)  位置．」それぞれ実行．
	かめた！消える．
」．

テーブル：折れ線グラフ＝「|;x_range y_range |
	fieldName1＝_rest!getarg　1 読む。
	fieldName2＝_rest!getarg　2 読む。
	two_arrA＝自分！(fieldName1)射影。
	two_arrB＝自分！(fieldName2)射影。
	かめた=タートル！作る．
	丸＝かめた！5　円　図形を作る ．
	線＝かめた！ペンなし 0 -200 移動する　ペンあり．
	y軸ラベル＝ラベル．
	x軸ラベル＝ラベル．
	tmp=0.
	x=50.
	z=50.
	y=-200.
	W=0.
	y_val = 0.
	change_arrA=配列！作る。
	two_arrA！「｜n｜change_arrA！（n！１　読む）書く。」それぞれ実行。
	
	max=change_arrA！１　読む.
	change_arrA！「｜n｜
　「max<n」！なら「max=n」実行。
	」それぞれ実行。
	
	「全部!(max > 0 )(max < 100)本当」!なら「
		「
				y軸ラベル! (y_val)  作る 8　文字サイズ　-20　(y) 位置.
			  かめた！ペンなし　0 (y) 位置 ペンあり (5) (y) 位置．
				y_val=(y_val) + 10.
				y = (y)+50.
		」! (((max)/10)+1) 繰り返す．
	」実行。
	
	change_arrA！「｜n l｜．
		「l == 1」!なら「線！ペンなし (z) (((n)*5)-200)  位置　ペンあり.」そうでなければ「線！(z) (((n)-(tmp))*5) 移動する．」実行．
		丸！(x) (((n)*5)-200) 位置 作る．
		x=x+50.
		tmp=n.
		y=y+50.
	」それぞれ実行。
		
	x=50.
	change_arrB=配列！作る。
	two_arrB！「｜n｜change_arrB！（n！１　読む）書く。」それぞれ実行。
		change_arrB！「｜n｜
			x軸ラベル！(n)   作る　8　文字サイズ　(x) -220 　位置．
			x=x+50.
　」それぞれ実行。

	x軸線＝かめた！ペンなし　0　-200　位置．
	x軸線！ペンあり　(((change_arrA！要素数？)+ 1)*50) 　０　移動する 図形を作る．
	y軸線＝かめた！ペンなし　0　-200　位置.
	y軸線！ペンあり　0 (y) 移動する 図形を作る．
	
	ret=自分．
	かめた！消える．
」．

//レコードごとの値で棒グラフを書く
テーブル：折れ線グラフ2＝「|;_a _x _y y_val |
tmp_arr = _rest!getarg。
data_arr = 配列！作る。
_a=0.
_x=50.
_y=0.
y_val = 0.
tmp_arr!「｜n｜_a=自分！(n) 射影。data_arr！（_a! 1 読む）書く。」それぞれ実行。
かめた=タートル！作る．
_color = 色！ランダムに作る。
丸＝かめた！5　円　(_color)　図形を作る ．
線＝かめた！ 作る ペンなし  50 0 位置 ．
y軸ラベル＝ラベル．
x軸ラベル＝ラベル．
data_arr!「| n |  丸！ (_x) (((n! 1 読む)*5)-0) 位置 作る ．線！(_x) (((n! 1 読む)*5)-0) 位置　ペンあり　図形を作る。 _x=(_x)+50.」それぞれ実行。
_x=50.
tmp_arr!「| n |  	x軸ラベル！(n)   作る　12　文字サイズ　(_x) -20 　位置．_x=(_x)+50.」それぞれ実行。

	max=(data_arr！１　読む)! 1　読む.
	data_arr！「｜n｜
　「max<(n! 1 読む)」！なら「max=(n! 1 読む)」実行。
	」それぞれ実行。
	
	「全部!(max > 0 )(max < 100)本当」!なら「
		「
				y軸ラベル! (y_val)  作る 8　文字サイズ　-20　(_y) 位置.
			  かめた！ペンなし　0 (_y) 位置 ペンあり (5) (_y) 位置 図形を作る．
				y_val=(y_val) + 10.
				_y = (_y)+50.
		」! (((max)/10)+2) 繰り返す．
	」実行。

	x軸線＝かめた！ペンなし　0　0　位置．
	x軸線！ペンあり　(((tmp_arr！要素数？)+ 1)*50) 　０　移動する 図形を作る．
	y軸線＝かめた！ペンなし　0　0　位置.
	y軸線！ペンあり　0 (_y) 移動する 図形を作る．

線！消える。
かめた！消える．
」．

テーブル：散布図＝「|;_a _x _y _x_val _y_val _ajast|
fieldName1＝_rest!getarg　1 読む。
fieldName2＝_rest!getarg　2 読む。
tmp_arr = 自分！(fieldName1)　(fieldName2)　射影。 
_a=0.
_x=0.
_y=0.
_y_val = 0.
_x_val = 0.
_ajast = 2.5.
かめた=タートル！作る．
丸＝かめた！5　円　(赤)　図形を作る ．
線＝かめた！ 作る ペンなし  50 0 位置 ．
y軸ラベル＝ラベル．
x軸ラベル＝ラベル．
Xタイトル＝ラベル！(fieldName1) 作る 50 -250 位置。
Yタイトル＝ラベル！(fieldName2) 作る -250 50  位置。

tmp_arr!「| n |  丸！(((n! 1 読む)*5)-200+(_ajast)) (((n! 2 読む)*5)-200+(_ajast)) 位置 作る. 」それぞれ実行.
	max=(tmp_arr！1 読む)! 1 読む.
	tmp_arr！「｜n｜
　「max<(n! 1 読む)」！なら「max=(n! 1 読む)」実行。
	」それぞれ実行。
	
	「全部!(max > 0 )(max < 100)本当」!なら「
		「
				y軸ラベル! (_y_val)  作る 8 文字サイズ -220 (-200+(_y)) 位置.
			  かめた！ペンなし　-200 (-200+(_y)) 位置 ペンあり -195 (-200+(_y)) 位置 図形を作る．
				_y_val=(_y_val) + 10.
				_y = (_y)+50.
		」! (((max)/10)+2) 繰り返す．
	」実行。
	
	max=(tmp_arr！1 読む)! 2 読む.
	tmp_arr！「｜n｜
　「max<(n! 2 読む)」！なら「max=(n! 2 読む)」実行。
	」それぞれ実行。
	
	「全部!(max > 0 )(max < 100)本当」!なら「
		「
				x軸ラベル! (_x_val)  作る 8 文字サイズ (-200+(_x)) -220 位置.
			  かめた！ペンなし (-200+(_x)) -200 位置 ペンあり (-200+(_x)) -195 位置 図形を作る．
				_x_val=(_x_val) + 10.
				_x = (_x)+50.
		」! (((max)/10)+2) 繰り返す．
	」実行。

	x軸線＝かめた！ペンなし　-200　-200　位置．
	x軸線！ペンあり　500 　0　移動する 図形を作る．
	y軸線＝かめた！ペンなし　-200　-200　位置.
	y軸線！ペンあり　0 500 移動する 図形を作る．

線！消える。
かめた！消える．
」．

テーブル：棒グラフ＝「| f1 f2; _x _y y_val  |
//フィールドの取得
tmp_arr = 自分！(f2)　射影。 
title_arr = 自分！(f1)　射影。

//配列のデータ読み出し
data_arr = 配列！作る。
tmp_arr!「｜n｜data_arr！（n! 1 読む）書く。」それぞれ実行。

//グラフのもと作成
テーブル：_DATA=data_arr.
自分！(f2) 最大値．
自分！(f2) 最小値．
自分！グラフのもと．

//データプロット
かめた＝タートル！作る．
data_arr!「| n i |  かめた! ペンなし ((_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XINTERVAL)*(i)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) ((n)*(_DACOL)) 位置 (((_XINTERVAL)*(i))+(_PLOT_RANGE)) (_YORIGIN) 位置 図形を作る. 」それぞれ実行。

title_arr !「| n i | ラベル！(n！1 読む) 作る 10 文字サイズ ((_XINTERVAL)*(i)) ((_YLOWERLIM)-20)  位置．」それぞれ実行．

かめた！消える．
」．
