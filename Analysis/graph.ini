//グラフオブジェクト
グラフ＝タートル！作る 消える 図形を作る。
グラフ：描画済みグラフ＝図形！(タートル！作る 消える 図形を作る) (タートル！作る 消える 図形を作る)  結合。
グラフ：_XORIGIN=0.
グラフ：_YORIGIN=0.
グラフ：_WIDTHCOL=(画面！幅？)/1419．
グラフ：_HEIGHTCOL=(画面！高さ？)/766．
グラフ：_PRANGE=45.
グラフ：_XINTERVAL=100.
グラフ：_YINTERVAL=60.
グラフ：_XNUMCOL=1.
グラフ：_LABELCOL=15.
グラフ：_YLOWERLIM=0.
グラフ：_YRANGE=300.
グラフ：_CHARSIZE=10。
グラフ：_DACOL=1.
グラフ：_YSCALE=undef.
//グラフ：縦の位置=-60。
グラフ：f1 = "".
グラフ：f2 = "".

グラフ：横軸タイトル＝「|title|
　自分：描画済みグラフ！(ラベル！(title) 作る 20 文字サイズ (_XORIGIN+_WIDTH/2) (_YORIGIN-80+縦の位置)  位置) 書く．
　自分。
」。

グラフ：縦軸タイトル＝「|title|
　自分：描画済みグラフ！(ラベル！(title) 作る 20 文字サイズ (_XORIGIN-100) (_YORIGIN+_YRANGE/2)  位置) 書く．
　自分。
」。

グラフ：横軸ラベル＝「|f1|
　自分：f1=f1。
　data_arr=_DATA!(f1) 重複。
　data_arr!「 |data cnt|
　　「(data!長さ？)<15」！なら「
　　　自分：描画済みグラフ！(ラベル！(data) 作る 10 文字サイズ ((_XORIGIN)+(_XINTERVAL)*(cnt)) ((_YORIGIN)-20)  位置) 書く．
　　」そうでなければ「
　　　自分：描画済みグラフ!(自分！(data) ((_XORIGIN)+(_XINTERVAL)*(cnt)) ((_YORIGIN)-20) 縦表示) 書く。
　　」実行。
　」それぞれ実行。
　自分。
」。

グラフ：移動する＝「| x  y|
　自分：描画済みグラフ！(x) (y) 移動する。
　自分：_XORIGIN=_XORIGIN+x。
　自分：_YORIGIN=_YORIGIN+y。
　自分。
」。

グラフ：位置＝「| x  y|
　自分：描画済みグラフ！(x) (y) 位置。
　自分：_XORIGIN=x。
　自分：_YORIGIN=y。
　自分。
」。

// 箱ひげ、棒、折れ線
グラフ：ｘ軸データ＝「｜data_arr option｜
　「option!="ラベルなし"」！なら「
　　data_arr!「 |data cnt|
　　　「(data!長さ？)<8」！なら「
　　　　描画済みグラフ!(ラベル！(data) 作る 10 文字サイズ ((_XORIGIN)+(_XINTERVAL)*(cnt)) ((_YORIGIN)-20)  位置) 書く．
　　　」そうでなければ「
　　　　自分！(data) ((_XORIGIN)+(_XINTERVAL)*(cnt)+_XINTERVAL*0.5) ((_YORIGIN)-20) 縦表示。
　　　」実行。
　　」それぞれ実行。
　」実行。
　グラフ:_WIDTH = (((data_arr！要素数？)+1)*(_XINTERVAL))。
　自分。
　//描画！(((data_arr！要素数？)+1)*(_XINTERVAL)) 歩く 図形を作る ．
」．

グラフ:x軸描画＝「
  ペン＝タートル！作る。
  col=色!0xBDBDBD 作る。
  ペン！2 線の太さ (col) 線の色 ペンなし (_XORIGIN) (_YORIGIN) 位置 ペンあり (_WIDTH) 歩く。
  仕上げ＝ペン！図形を作る。
  ペン！消える。
  仕上げ。
」。

グラフ：データ補正値計算＝「| data_arr |
　data_arr!「 |data cnt|
　　「cnt == 1」！なら「max = data 」実行．
　　「max < data 」！なら「max = data 」実行。
　」それぞれ実行．
「max > 0 」！なら「
　　digit=ceil(log(abs(max))).
　　base=max*1.05。
　　place=10!(floor(log(base))) pow。
　　up1_digit=floor(base/place)。

　　scale=「up1_digit < 2」!なら「place*0.2」
　　　　　　そうでなければ「
　　　　　　　「up1_digit < 5」!なら「 place * 0.5」
　　　　　　　そうでなければ「place」実行。
　　　　　　」実行。
　　段数=floor(base/scale+1)。
　　up_lim=段数*scale.
　」実行。
　グラフ:_DACOL=_YRANGE/up_lim*_HEIGHTCOL。
　グラフ:_段数＝段数。
　グラフ:_digit=digit。
　グラフ:_scale=scale。
　グラフ:_up_lim=up_lim。
　_DACOL。
」。

グラフ:補正フィールド決定=「| f_arr |
　f_arr!「| n i|
　　tmp=_DATA！(n) "true" 最大値　値読み出し。
　　「i==1」!なら「
　　　max=tmp。
　　　F=n。
　　」そうでなければ「
　　　「max < tmp」!なら「
　　　　max=tmp。
　　　　F=ｎ。
　　　」実行。
　　」実行。
　」それぞれ実行。
 F。
」。


// 箱ひげ、棒、折れ線
グラフ：y軸データ＝「｜data_arr ;digit｜
　ペン＝タートル！作る．
　縦軸パーツ＝配列！作る。
　col=色!0xBDBDBD 作る。
　digit=-1.
　グラフ:_DACOL=自分！(data_arr) データ補正値計算。
 「_YSCALE==(undef)」！なら「_YSCALE=_scale。 check="ok"」そうでなければ「グラフ：_段数=ceil(_up_lim/_YSCALE)」実行。
　「|i|
　　描画済みグラフ！(ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ ((_XORIGIN)-abs(15*_digit)) ((_YRANGE/_段数)*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_YORIGIN)) 位置) 書く。
　　「i!=1」！なら「
    　ペン！2 線の太さ  (col)　線の色 ペンなし (_XORIGIN) (((_YRANGE/_段数)*(i-1))*(_HEIGHTCOL)+(_YORIGIN)) 位置 ペンあり (_WIDTH) 歩く．
　　」実行。
　」！(_段数+1) 繰り返す．

　軸線=ペン！図形を作る。
　縦軸パーツ!(軸線)　書く。
　ペン！消える．
　縦軸パーツ。
」．

//散布図
グラフ：軸設定_散布図＝「|data_arr1 data_arr2 ;digit|
　ペン＝タートル！作る 90　左回り。
　col=色!0xBDBDBD 作る。
　グラフ:_WIDTH = _YRANGE*_HEIGHTCOL。
  //横軸
　グラフ：_DACOLX=自分！(data_arr1) データ補正値計算。
　「_YSCALE==(undef)」！なら「_YSCALE=_scale。 check="ok"」そうでなければ「グラフ：_段数=ceil(_up_lim/_YSCALE)」実行。
　「|i|
　　描画済みグラフ!(ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ (((_YRANGE)/(_段数))*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_XORIGIN)-20) ((_YORIGIN)-abs(5*_digit)) 位置) 書く。
　　「i!=1」！なら「
    　ペン！2 線の太さ ペンなし (((_YRANGE/_段数)*(i-1))*(_HEIGHTCOL)+(_XORIGIN)) (_YORIGIN) 位置 ペンあり (_WIDTH) 歩く。
　　」実行。
　」！(_段数+1) 繰り返す．
　//縦軸
　ペン！90 右回り。
　グラフ：_DACOLY=自分！(data_arr2) データ補正値計算。
　「check=="ok"」！なら「_YSCALE=_scale. check=""」そうでなければ「グラフ：_段数=ceil(_up_lim/_YSCALE)」実行。
　「|i|
　　描画済みグラフ!（ラベル！((i-1)*(_YSCALE)) 作る 10 文字サイズ ((_XORIGIN)-abs(15*_digit)) (((_YRANGE)/(_段数))*(i-1)*(_HEIGHTCOL)+(_LABELCOL)+(_YORIGIN)) 位置) 書く。
　　「i!=1」！なら「
    　ペン！2 線の太さ ペンなし (_XORIGIN) (((_YRANGE/_段数)*(i-1))*(_HEIGHTCOL)+(_YORIGIN)) 位置 ペンあり (_WIDTH) 歩く。
　　」実行。
　」！(_段数+1) 繰り返す．
　軸設定=ペン！(col) 図形を作る。
」。

グラフ：軸仕上げ_散布図＝「|ペン|
    ペン！2 線の太さ ペンなし (_XORIGIN) (_YORIGIN) 位置  ペンあり (_WIDTH) 歩く 。
    仕上げ＝ペン！ペンなし 90 左回り (_XORIGIN) (_YORIGIN) 位置  ペンあり (_WIDTH) 歩く (色!0xBDBDBD 作る) 図形を作る。
    ペン！消える。
    仕上げ。
」。


//帯グラフ
グラフ：軸設定_帯＝「|arg|
    グラフ：_YLOWERLIM = _YORIGIN-20 。
    ペン＝タートル！作る。
    ペン！ペンなし (色!0xBDBDBD 作る) 線の色 2 線の太さ 90 左回り (_XORIGIN) (_YORIGIN) 位置。
    軸線=「 | i |
    　ペン！ペンなし (_XORIGIN+i*40) (_YORIGIN) 位置  ペンあり (_XORIGIN+i*40) (_YORIGIN+_MAXHEIGHT) 位置。
    」！ 10 繰り返す 図形を作る。
    「 | i |
    　描画済みグラフ!(ラベル！ (((i-1)*20)+"%")  作る (-5+(_XORIGIN)+(i-1)*(_WIDTH/5)) (_YLOWERLIM)  位置 10  文字サイズ) 書く。
    」！ 6 繰り返す。
    //縦軸ラベル
    arg!「| val i|
        描画済みグラフ！(ラベル！(val) 作る  (_XORIGIN-55)  (_YORIGIN+(_MAXHEIGHT-25)-70*(i-1)-15) 位置 15 文字サイズ) 書く。
    」それぞれ実行。
    ペン！消える。
    軸線。
」。

グラフ：軸仕上げ_帯＝「||
　　ペン=タートル！作る。
　　仕上げ=ペン！2 線の太さ ペンなし 90 左回り (_XORIGIN) (_YORIGIN) 位置  ペンあり (_XORIGIN) (_YORIGIN+_MAXHEIGHT) 位置 (色!0xBDBDBD 作る) 図形を作る。
　　ペン！消える。
　　仕上げ。
」。


グラフ：原点＝「| x y |
　グラフ：_XORIGIN = x。
　グラフ：_YORIGIN = y。
　自分。
」。

グラフ：縦軸間隔＝「｜val｜
　グラフ：_YSCALE = val.
　自分。
」．



グラフ:ラベル折り返し表示＝「| 文字列 x y |
　end=(文字列！長さ?)-5。
　a= 文字列！1 7 部分  。
　b= 文字列！8 (end) 部分。
　c=ラベル ! (a) 作る (x) (y) 位置 (_CHARSIZE) 文字サイズ 100 15 大きさ。
　d=ラベル！(b) 作る (x) (y-(c!高さ?)) 位置 (_CHARSIZE) 文字サイズ。
　描画済みグラフ！(c) (d) 書く。
　a。
」。

グラフ:縦表示＝「| 文字列 x y |
　文字数＝文字列！長さ?。
　「|i|
　　　tmp=配列！(文字列！(i) 1 部分) 作る。
　　　tmp!「|n j|
　　　　　　　描画済みグラフ!(ラベル！(n) 作る (x) (y-15*i) 位置 (_CHARSIZE) 文字サイズ) 書く。
　　　　　　　自分:縦の位置=(y-15*i)。
　　　」それぞれ実行。
　」！(文字数)　繰り返す。
」。

グラフ:着色=「| i |
    「i%8 == 1」！なら「col = 色！ 0x5858FA 作る」そうでなければ
    「i%8 == 2」なら「col = 色！ 0xA9A9F5 作る」そうでなければ
    「i%8 == 3」なら「col = 色！ 0xA9F5F2 作る」そうでなければ
    「i%8 == 4」なら「col = 色！ 0xA9F5A9 作る」そうでなければ
    「i%8 == 5」なら「col = 色！ 0xF2F5A9 作る」そうでなければ
    「i%8 == 6」なら「col = 色！ 0xF5D0A9 作る」そうでなければ
    「i%8 == 7」なら「col = 色！ 0xF5A9A9 作る」そうでなければ
    「i%8 == 0」なら「col = 色！ 0xFA5858 作る」実行．
    col。
」。

テーブル：正規分布=「| ave sdiv|
　_正規分布=グラフ！作る。
　_正規分布：_DATA=自分。
　_正規分布：_ave=(ave!1 読む)!1 読む。
　_正規分布：_sdiv=(sdiv!1 読む)!1 読む。
　_正規分布:描画＝「
　　x=(_ave-_sdiv*3)。
　　a=(1/(sqrt(2*PI)*_sdiv))*(exp(((x-_ave)!2 pow)/(-2*(_sdiv!2 pow))))。
　　_col=350/((_ave+_sdiv*3)-(_ave-_sdiv*3)+2)。
　　col=色!0xBDBDBD 作る。
　　プロット＝タートル！作る ペンなし ((x+_XORIGIN)*_col) (a*2000+_YORIGIN) 位置 ペンあり。
　　軸描画＝タートル！作る (col) 線の色。
　　cnt=0.
　　「|i|
　　　F=x+(i-1)。
　　　a=(1/(sqrt(2*PI)*_sdiv))*(exp(((F-_ave)!2 pow)/(-2*(_sdiv!2 pow))))。
　　　プロット！ ((F*1+_XORIGIN)*_col) (a*5000+_YORIGIN) 位置。

　　　「(round(F-_ave)%round(_sdiv))==0」!なら「
　　　　ラベル！(round(x)+i-1) 作る ((F*1+_XORIGIN)*_col) -5 位置 10 文字サイズ。
　　　　縦軸=軸描画！ペンなし (col) 線の色 ((F*1+_XORIGIN)*_col) (_YORIGIN) 位置 ペンあり 90　左回り 250 歩く 90 右回り 図形を作る。
　　　　プロット!ペンなし (黒) 線の色 ((F*1+_XORIGIN)*_col) (a*5000+_YORIGIN) 位置　ペンあり。
　　　」実行。
　　　cnt=cnt+1。
　　」！ ((_ave+_sdiv*3)-(_ave-_sdiv*3)+2) 繰り返す。

　　「| i |
　　　縦軸メモリ＝ラベル!(0.01*(i-1)) 作る。
　　　縦幅=縦軸メモリ!高さ？。
　　　縦軸メモリ! (_ave*_col+_XORIGIN-30) ((i-1)*50+(縦幅/2))　位置 10　文字サイズ。
　　　横軸=軸描画！ペンなし (col) 線の色 ((x+_XORIGIN)*_col)  ((i-1)*50+_YORIGIN)  位置 ペンあり ((cnt)*_col) 歩く 図形を作る。
　　」! 6 繰り返す。

　　縦軸ラベル=ラベル！"確率密度" 作る　((x+_XORIGIN)*_col-80) (140+_YORIGIN) 位置　15　文字サイズ。
　　横軸ラベル=ラベル！"点数" 作る。
　　横幅＝横軸ラベル！幅？。
　　横軸ラベル！(_ave*_col-(横幅/3)+_XORIGIN) (-25+_YORIGIN) 位置 15 文字サイズ。
　　プロット！図形を作る。
　　プロット！消える。
　　軸描画！消える。
　」。
　_正規分布。
」。

テーブル：標準正規分布=「| |
　_標準正規分布=グラフ！作る。
　_標準正規分布:描画＝「
　　x=-4.
　　a=(1/(sqrt(2*PI)))*(exp((x!2 pow)/-2))。
　　col=色!0xBDBDBD 作る。
　　プロット＝タートル！作る ペンなし (x*50+_XORIGIN) (a*500+_YORIGIN) 位置 ペンあり。
　　軸描画＝タートル！作る (col) 線の色。

　　start=-4.1.
　　cnt=0.
　「|i|
　　　x=(start)+(i*0.1).
　　　a=(1/(sqrt(2*PI)))*(exp((x!2 pow)/-2)).
　　　プロット！ (x*50+_XORIGIN) (a*500+_YORIGIN) 位置.
　　「(cnt%10)==0」!なら「
　　　ラベル！(x) 作る (x*50+_XORIGIN) (-5+_YORIGIN) 位置 10 文字サイズ。
　　　縦軸=軸描画！ペンなし (col) 線の色 (x*50+_XORIGIN) (_YORIGIN) 位置 ペンあり 90　左回り 250 歩く 90 右回り 図形を作る。
　　　プロット!ペンなし (黒) 線の色 (x*50+_XORIGIN) (a*500+_YORIGIN) 位置　ペンあり。
　　」実行。
　　cnt=cnt+1。
　」！ 81 繰り返す。

　「| i |
　　縦軸ラベル＝ラベル!(0.1*(i-1)) 作る。
　　縦幅=縦軸ラベル!高さ？。
　　縦軸ラベル! (-25+_XORIGIN) ((i-1)*50+(縦幅/2)+_YORIGIN)　位置 10　文字サイズ。
　　横軸=軸描画！ペンなし (col) 線の色 (-200+_XORIGIN)  ((i-1)*50+_YORIGIN)  位置 ペンあり 400 歩く 図形を作る。
　」! 6 繰り返す。
　プロット！図形を作る。
　プロット！消える。
　軸描画！消える。
　」。
　_標準正規分布。
」。


テーブル：棒グラフ=「||　
　_棒グラフ=グラフ！作る。
　_棒グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
　_棒グラフ:_DATA=自分．
　_棒グラフ:f1 = 自分:フィールド名！1 読む。
　_棒グラフ:f2 = _rest。
　_棒グラフ:描画=「
　　data_x = _DATA！（f1）射影。
　　グラフ:_WIDTH = (((data_x！要素数？)+1)*(_XINTERVAL))。
　　「(f2!1 読む)=="すべて"」！なら「
　　　tmp=(_DATA：フィールド名)！作る。
　　　プロットフィールド=tmp!(f1) 消す。　　　
　　　F=自分！(プロットフィールド)　補正フィールド決定。
　　　data_y=_DATA！（F）射影。
　　」そうでなければ「(f2!要素数?)==1」なら「
　　　data_y=_DATA！（f2!1 読む）射影。
　　」そうでなければ「
　　　F=自分！(f2) 補正フィールド決定。
　　　data_y=_DATA！（F）射影．
　　」実行。

　　自分！(data_y) y軸データ．
　　ペン＝タートル！作る。
　　プロット=ペン！図形を作る。
　　「(f2!1　読む)=="すべて"」！なら「

　　　_PRANGE=_PRANGE/(プロットフィールド!要素数?)。
　　　x_pos=_XORIGIN。
　　　プロットフィールド!「|val cnt|
　　　　描画位置=_PRANGE*(cnt-1)。
　　　　data_y=_DATA！(val) 射影。
　　　　data_y！「| n i |
　　　　　ペン! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)+描画位置) (_YORIGIN) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)+描画位置) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)+描画位置) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)+描画位置) (_YORIGIN) 位置.
　　　　」それぞれ実行。
　　　　棒=ペン！(グラフ！(cnt) 着色) 図形を作る。
　　　　系列=ペン！ペンなし (x_pos) (_YORIGIN-50) 位置 ペンあり 10 4 角形 (グラフ!(cnt) 着色) 図形を作る。
　　　　プロット=図形！(プロット)　(棒) (系列) 結合。
　　　　描画済みグラフ！(ラベル! (val) 作る (x_pos+20) (_YORIGIN-40) 位置 10 文字サイズ) 書く。
　　　　x_pos = x_pos + 100。
　　　」それぞれ実行。

　　」そうでなければ「(f2!要素数?)==1」なら「

　　　data_y！「| n i |
　　　　ペン! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN) 位置.
　　　」それぞれ実行。
　　　プロット＝ペン！図形を作る。
　　　プロット！(グラフ!1 着色) 塗る。

　　」そうでなければ「

　　　_PRANGE=_PRANGE/(f2!要素数?)。
　　　x_pos=_XORIGIN。
　　　f2!「|val cnt|

　　　　描画位置=_PRANGE*(cnt-1)。
　　　　data_y=_DATA！(val) 射影。
　　　　data_y！「| n i |
　　　　　ペン! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)+描画位置) (_YORIGIN) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)+描画位置) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)+描画位置) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)+描画位置) (_YORIGIN) 位置.
　　　　」それぞれ実行。

　　　　棒=ペン！(グラフ！(cnt) 着色) 図形を作る。
　　　　系列=ペン！ペンなし (x_pos) (_YORIGIN-50) 位置 ペンあり 10 4 角形 (グラフ!(cnt) 着色) 図形を作る。
　　　　プロット=図形！(プロット)　(棒) (系列) 結合。
　　　　描画済みグラフ！(ラベル! (val) 作る (x_pos+20) (_YORIGIN-40) 位置 10 文字サイズ) 書く。
　　　　x_pos = x_pos + 100。
　　　」それぞれ実行。

　　」実行。
　　ペン！消える。
　　自分！x軸描画。
　　グラフパーツ＝図形！(仕上げ) (プロット) 結合。
　　縦軸パーツ！「|n|
　　　グラフパーツ！(n) 書く。
　　」それぞれ実行。
　　描画済みグラフ!(グラフパーツ)　書く。
　　自分。
　」．
　_棒グラフ．
」．

テーブル：ヒストグラム=「|f2|　
　_ヒストグラム=グラフ！作る。
　_ヒストグラム:描画済みグラフ=グラフ:描画済みグラフ!作る。
　_ヒストグラム:_DATA=自分．
　_ヒストグラム:f1 = 自分:フィールド名！1 読む。
　_ヒストグラム:f2 = f2。
　_ヒストグラム:描画=「
　　data_x = _DATA！（f1）射影．
　　data_y = _DATA！（f2）射影．
　　自分：_PRANGE=30.
　　自分：_XINTERVAL=30.
　　自分！(data_x) x軸データ．
   _WIDTH=_WIDTH+_XINTERVAL。
　　自分！(data_y) y軸データ．
　　ペン＝タートル！作る。
　　data_y！「| n i |
　　　ペン! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+(n)*(_DACOL)) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN) 位置.
　　」それぞれ実行．
　　プロット＝ペン！図形を作る。
　　ペン！消える。
　　自分！x軸描画。
　　//グラフ:_YORIGIN = -1*((グラフ:_YRANGE)*(グラフ:_HEIGHTCOL))。
　　プロット！(グラフ!1 着色) 塗る。
　　グラフパーツ＝図形！(プロット) (軸線) (仕上げ) 結合。
　　描画済みグラフ!(グラフパーツ)　書く。
　　自分。
　」．
　_ヒストグラム．
」．

テーブル：積み上げ棒グラフ=「| |
  _積み上げ棒グラフ＝グラフ！作る。
  _積み上げ棒グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
  _積み上げ棒グラフ:_DATA=自分。
  _積み上げ棒グラフ:f1 = 自分:フィールド名！1 読む。
  _積み上げ棒グラフ:f2 = _rest。
  _積み上げ棒グラフ:描画=「| |

  「(f2!1　読む)=="すべて"」！なら「

　　　tmp=(_DATA：フィールド名)！作る。
　　　プロットフィールド=tmp!(f1) 消す。　　　
　　　F=自分！(プロットフィールド)　補正フィールド決定。
　　　data_y=_DATA！（F）射影。
　　　

　　」そうでなければ「

　　　プロットフィールド=f2。
　　　F=自分！(f2) 補正フィールド決定。
　　　data_y=_DATA！（F）射影。

　　」実行。

　　自分！(プロットフィールド) "ラベルなし" x軸データ。
　　プロットフィールド!「| f i|
  　　「i==1」！なら「
  　　　tmp_data = _DATA！(f) 合計値。
  　　」そうでなければ「
  　　　「(tmp_data!1 読む) < (_DATA！(f) 合計値　値読み出し) 」！なら「tmp_data = _DATA！(f) 合計値。　」実行。
  　　」実行。
  　」それぞれ実行。
  　自分！(tmp_data) y軸データ。
  　ペン=タートル！作る。
  　プロット=ペン！図形を作る。

  　プロットフィールド!「 | f i|
  　　data_arr = _DATA！（f）射影。
  　　y_pos=0。
  　　data_arr!「 | n j |
  　　　col= グラフ！(j) 着色。
  　　　棒＝ペン! ペンなし ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+y_pos) 位置 ペンあり ((_XORIGIN)+(_XINTERVAL)*(i)) (_YORIGIN+(n)*(_DACOL)+y_pos) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+(n)*(_DACOL)+y_pos) 位置 (((_XORIGIN)+(_XINTERVAL)*(i))+(_PRANGE)) (_YORIGIN+y_pos) 位置 (col) 図形を作る。
  　　　y_pos=y_pos+(n*(_DACOL))。
  　　　プロット＝図形！(プロット) (棒)　結合。
  　　」それぞれ実行。　　　　
  　」それぞれ実行。

  　y_pos = -50。
  　x_pos = _XORIGIN。
  　f1_arr=_DATA!(f1) 射影。
  　プロット2=ペン！図形を作る。
  　f1_arr！「 | val i|
  　　系列＝ペン！ペンなし (x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (グラフ!(i) 着色) 図形を作る。
  　　自分！(val) (x_pos+20) (_YORIGIN+y_pos+2) ラベル折り返し表示。
  　　//描画済みグラフ!(ラベル！(val)　作る (x_pos+20) (_YORIGIN+y_pos+2) 位置)　書く。
  　　プロット2＝図形！(プロット2) (系列)　結合。
  　　x_pos=x_pos+100。
  　」それぞれ実行。
  　ペン！消える。
  　自分！x軸描画。
  　グラフパーツ＝図形！(プロット) (プロット2) (仕上げ) 結合。
  　縦軸パーツ！「|n|
  　　グラフパーツ！(n) 書く。
  　」それぞれ実行。
  　描画済みグラフ!(グラフパーツ)　書く。
  　自分。
  」。
  _積み上げ棒グラフ。
」。

テーブル：折れ線グラフ=「||
　_折れ線グラフ＝グラフ！作る．
　_折れ線グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
　_折れ線グラフ:_DATA=自分．
　_折れ線グラフ:f1 = 自分:フィールド名！1 読む。
　_折れ線グラフ:f2 = _rest。
　_折れ線グラフ:描画=「|　|
　　f1_arr=_DATA!(f1) 射影。
　　自分！(f1_arr) x軸データ。
　　「(f2!1　読む)=="すべて"」！なら「
　 　 tmp=(_DATA：フィールド名)！作る。
　　　プロットフィールド=tmp!(f1) 消す。
　　　f2=プロットフィールド。
　　」実行。
　　max=_DATA!(f2!1 読む) 最大値　値読み出し。
　　maxf=f2!1 読む。
　　f2!「|n i|
　　　「max < (_DATA！(n) 最大値 値読み出し)」！なら「
　　　　max=(_DATA！(n) 最大値 値読み出し)。
　　　　maxf=n。
　　　」実行。
　　」それぞれ実行。
　　自分！(_DATA!(maxf) 射影) y軸データ。

　　Lペン＝タートル！作る。
　　Dペン＝タートル！作る。
　　d_arr＝配列！作る。
　　f2!「|n i|
　　　data_arr=_DATA!(n) 射影。
　　　data_arr！「|m j|
　　　　「j==1」!なら「
　　　　　Lペン！(グラフ！(i) 着色) 線の色 ペンなし　(_XORIGIN+_XINTERVAL*j)　(_YORIGIN+m*_DACOL) 位置。
　　　　」そうでなければ「
　　　　　Lペン！ペンあり　(_XORIGIN+_XINTERVAL*j)　(_YORIGIN+m*_DACOL) 位置。
　　　　」実行。
　　　　Dペン！ペンなし　(_XORIGIN+_XINTERVAL*j-5)　(_YORIGIN+m*_DACOL+5) 位置 ペンあり　10 4 角形。
　　　」それぞれ実行。
　　　Dペン！ペンなし (_XORIGIN+_XINTERVAL*i) (_YORIGIN-50) 位置　ペンあり 10 4 角形。
　　　描画済みグラフ!(ラベル！(n) 作る 10 文字サイズ (_XORIGIN+_XINTERVAL*i+15) (_YORIGIN-40) 位置) 書く。
　　　四角＝Dペン！(グラフ！(i) 着色)　図形を作る。
　　　ライン＝Lペン！図形を作る。
　　　d_arr!(図形！(四角) (ライン) 結合) 書く。　
　　」それぞれ実行。
　　自分！x軸描画。
　　d_arr!「|n i|
　　　「i==1」！なら「
　　　　図＝図形！(軸線) (仕上げ) (n) 結合。
　　　」そうでなければ「
　　　　図＝図形！ (図) (n) 結合。
　　　」実行。　
　　」それぞれ実行。　
　　Lペン！消える。
　　Dペン！消える。
　　描画済みグラフ!(図)　書く。
　　自分。
　」。
　_折れ線グラフ。
」。


テーブル：円グラフ=「 |f2|
  _円グラフ=グラフ！作る．
  _円グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
  _円グラフ:_DATA=自分．
  _円グラフ:f1 = 自分:フィールド名！1 読む。
  _円グラフ:f2 = f2。
  _円グラフ:描画=「| i |
    ペン＝タートル！作る。
    D_f1=_DATA！(f2) 小さい順 (f1) 射影.
    r=150.  x=90.  x_pos= r+20.  y_pos= -1*r.
    d_arr=_DATA！(f2) 小さい順 (f2) 射影 。
    sum=d_arr!(f2) 合計値　値読み出し。
    add=0。
    プロット＝ペン！図形を作る。
    系列=ペン！図形を作る。
    d_arr!「| val j|
      prop=round((val/sum)*1000)。
      prop=prop/10.
      col= グラフ！(j) 着色。
      long=0。
      ペン！ペンなし 0 0 位置．
      チーズ＝「
        ペン！ペンあり 1 線の太さ ((r)*cos(x)) ((r)*sin(x)) 位置．
        x=x+1．
        long=long+1.
        ペン．
      」! ((prop)*3.62) 繰り返す 0 0 位置 (col) 図形を作る．
      チーズ！(_XORIGIN) (_YORIGIN) 位置。
      プロット＝図形！(プロット) (チーズ)　結合。
      「val > 6」！なら「
        描画済みグラフ!(ラベル！(prop+"%") 作る (_XORIGIN+(r/3*2)*cos(x-(long/2))-5) (_YORIGIN+(r/3*2)*sin(x-(long/2))) 位置 10 文字サイズ) 書く。
      」そうでなければ「
        描画済みグラフ!(ラベル！(prop+"%") 作る (_XORIGIN+(r/4*5)*cos(x-(long/2))-5) (_YORIGIN+(r/4*5)*sin(x-(long/2))) 位置 10 文字サイズ) 書く。
        系列＝図形！(系列) (ペン!ペンなし ((r/4*5)*cos(x-(long/2))) (_YORIGIN+(r/4*5)*sin(x-(long/2))-25)  位置 ペンあり ((r)*cos(x-(long/2))-5) (_YORIGIN+(r)*sin(x-(long/2)))  位置 (黒)  図形を作る) 結合。
      」実行。
      系列＝図形！(系列) (ペン！ペンなし (_XORIGIN+x_pos) (_YORIGIN+y_pos) 位置 ペンあり 10 4 角形 (col) 図形を作る) 結合。
      A=ラベル! (D_f1！ (j) 読む) 作る (_XORIGIN+x_pos+15) (_YORIGIN+y_pos+12) 位置。
      描画済みグラフ!(A) 書く。
      描画済みグラフ!(ラベル! (" "+(d_arr！ (j) 読む)+"件") 作る (_XORIGIN+x_pos+15+(A!幅？)) (_YORIGIN+y_pos+12) 位置) 書く。
      y_pos = y_pos + 50。
    」それぞれ実行。
    ペン！消える．
    グラフパーツ＝図形！(プロット) (系列) 結合。
    描画済みグラフ!(グラフパーツ)　書く。
    自分。
  」.
  //グラフ:_YORIGIN = -1*(400-(グラフ:_YORIGIN))。
　_円グラフ．
」．

テーブル：帯グラフ=「| |
  _帯グラフ=グラフ！作る。
  _帯グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
  _帯グラフ:_DATA=自分。
  _帯グラフ:f1 = 自分:フィールド名！1 読む。
  _帯グラフ:joint_pos=配列！作る。
  _帯グラフ:f2 = _rest。
  _帯グラフ:描画=「|　|
    グラフ:_WIDTH=400。
    plot_pos=25。
    「(f2!1　読む)=="すべて"」！なら「
  　  tmp=(_DATA：フィールド名)！作る。
    　プロットフィールド=tmp!(f1) 消す。
    　f2=プロットフィールド。
    」実行。
    グラフ:_MAXHEIGHT = ((f2!要素数?)*_PRANGE)+(((f2!要素数?)+1)*plot_pos)。
    D_f1=_DATA！(f1) 射影。
    自分！(f2) 軸設定_帯。
    x_pos=_WIDTH + plot_pos。
    y_pos=_MAXHEIGHT/2。
    ペン＝タートル！作る。
    プロット＝ペン！図形を作る。
    系列＝ペン！図形を作る。
    break_arr=配列!作る。
    「| i |
      d_arr=_DATA! (f2!(i) 読む) 射影 。
      sum=d_arr!(f2!(i)　読む) 合計値　値読み出し。
      add=0。
      box_y=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i-1))。
      d_arr!「| val j|
        prop=val/sum。
        col= グラフ！(j) 着色。
        ペン！ペンなし (_XORIGIN+add) (box_y) 位置。
        tmp=「ペン！ペンあり (_WIDTH*prop) 歩く 90  右回り (_PRANGE) 歩く 90 右回り」! 2 繰り返す (col) 図形を作る。
        プロット＝図形！(プロット) (tmp) 結合。
        「(round(prop*1000)/10)>7」!なら「
        　描画済みグラフ!(ラベル!((round(prop*1000)/10)+"%") 作る (_XORIGIN+add+(_WIDTH*prop)/2-12)　(box_y-15) 位置 10 文字サイズ) 書く。
        」そうでなければ「
        　描画済みグラフ!(ラベル!((round(prop*1000)/10)+"%") 作る (_XORIGIN+add+(_WIDTH*prop)/2-12)　(box_y+5) 位置 10 文字サイズ) 書く。
        」実行。
        「i==1」!なら「
          tmp=ペン！ペンなし (_XORIGIN+100*(j-1)) (_YORIGIN-60) 位置 ペンあり 10 4 角形 (col) 図形を作る．
          系列＝図形！(系列) (tmp) 結合。
      　  描画済みグラフ!(ラベル! (D_f1！ (j) 読む) 作る (_XORIGIN+100*(j-1)+15) (_YORIGIN-50) 位置 10 文字サイズ) 書く。
      　  x_pos = x_pos + 1000。
      　」実行。
      　add = add + (_WIDTH*prop)。
      　break_arr!(add) 書く。
      」それぞれ実行。
    」!(f2!要素数) 繰り返す。
    「| i |
      「| j ; x1 y1 x2 y2 |
        「i!=(f2!要素数?)」!なら「
          x1=(break_arr!(j+(i-1)*(d_arr!要素数?)) 読む) + _XORIGIN。
          x2=(break_arr!(j+(d_arr!要素数?)+(i-1)*(d_arr!要素数?)) 読む)+ _XORIGIN。
          y1=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i-1))。
          y2=(_YORIGIN+(_MAXHEIGHT-plot_pos)-(_PRANGE+plot_pos)*(i))。
          ペン! ペンなし (x1) (y1-_PRANGE) 位置 ペンあり (色!0x5C5C5C 作る) 線の色 (x2) (y2) 位置。
        」実行。
      」!(d_arr！要素数?) 繰り返す。
    」!(f2!要素数?) 繰り返す。
    線=ペン！図形を作る。
    ペン！消える。
    自分！軸仕上げ_帯。
    グラフパーツ＝図形！(仕上げ) (軸線) (系列) (プロット) (線) 結合。
    描画済みグラフ!(グラフパーツ)　書く。
    自分。
  」。
  _帯グラフ。
」。

テーブル:散布図＝「|f1 f2 flag|
　_散布図＝グラフ！作る。
　_散布図:描画済みグラフ=グラフ:描画済みグラフ!作る。
　_散布図:_DATA=自分．
　_散布図:f1 = f1。
　_散布図:f2 = f2。
　_散布図:flag = flag。
　_散布図：描画=「||
　　f1_arr=_DATA!(f1) 射影。
　　f2_arr=_DATA!(f2) 射影。
　　自分！(f1_arr) (f2_arr) 軸設定_散布図。
　　f1_arr!「|val cnt|
      ペン！ペンなし (val*_DACOLX-1+_XORIGIN) ((f2_arr!(cnt) 読む)*_DACOLY-1+_YORIGIN) 位置 ペンあり 2 4 角形。
　　」それぞれ実行。
　　プロット＝ペン！(赤)　図形を作る。
　　描画済みグラフ!(ラベル！(f1) 作る (_XORIGIN+100) (_YORIGIN-50) 位置 10 文字サイズ) 書く。
　　描画済みグラフ!(ラベル！(f2) 作る (_XORIGIN-80) (_YORIGIN+130) 位置 10 文字サイズ) 書く。
　　自分！(ペン) 軸仕上げ_散布図。
　　グラフパーツ＝図形！(仕上げ) (プロット) (軸設定) 結合。
　　描画済みグラフ!(グラフパーツ)　書く。
　　自分。
　」。
　//近似曲線：最小二乗法
　_散布図：線形近似＝「
　　f1_arr=_DATA!(f1) 射影。
　　f2_arr=_DATA!(f2) 射影。
　　_WIDTH=グラフ:_YRANGE*グラフ:_HEIGHTCOL。
　　DACOLX=自分！(f1_arr) データ補正値計算。
　　DACOLY=自分！(f2_arr) データ補正値計算。
　　標準偏差＝_DATA!(f1) 標準偏差 値読み出し。
　　共分散＝_DATA！(f1) (f2) 共分散 値読み出し。
　　x平均＝_DATA！(f1) 平均値 値読み出し。
　　y平均＝_DATA！(f2) 平均値 値読み出し。
　　傾き＝共分散/(標準偏差! 2 pow)。
　　切片＝y平均-（傾き*x平均）。
　　x2=_WIDTH/DACOLX。
　　y2=x2*傾き+切片。
　　ペン＝タートル！作る　ぺんなし　1 線の太さ。
　　近似線＝ペン！(_XORIGIN) (_YORIGIN+切片*DACOLY) 位置　ぺんあり (_XORIGIN+x2*DACOLX) (_YORIGIN+y2*DACOLY)　位置　(青) 図形を作る。
　　描画済みグラフ！(ラベル！("y="+(傾き)+"x+"+(切片)) 作る 10 文字サイズ　(_XORIGIN+x2*DACOLX+10) (_YORIGIN+y2*DACOLY) 位置) 書く。
　　ペン！消える。
　　描画済みグラフ!(近似線)　書く。
　　自分。
　」。
　_散布図。
」。



テーブル：箱ひげ図=「 |f2|
　_箱ひげ図＝グラフ！作る．
　_箱ひげ図グラフ:描画済みグラフ=グラフ:描画済みグラフ!作る。
　_箱ひげ図:_DATA=自分．
　_箱ひげ図:f1 = 自分:フィールド名！1 読む。
　_箱ひげ図:f2 = f2。

　_箱ひげ図：描画=「||
　　//一つ目の引数(x軸の要素)を取得し値の重複を除く．
　　f1_arr=_DATA！(f1) 重複．
　　f1_num＝0．
　　f2_num＝0．
　　data_y = _DATA！(f2）射影．
　　自分！(f1_arr) "ラベルなし" x軸データ．
　　自分！(data_y) y軸データ．

　　//引数に取られたフィールドがそれぞれ何番目の要素であるかを調べる
　　「｜番号｜
　 　 「（_DATA:フィールド名！（番号）読む）＝＝ (f1)」！なら
　  　「f1_num＝番号。」そうでなければ
　  　「（_DATA:フィールド名！（番号）読む）＝＝ (f2)」なら
　  　「f2_num＝番号。」実行。
　　」！（_DATA:フィールド名！要素数？）繰り返す。

　　ペン＝タートル！作る。
　　f1_arr!「|f cnt|
　　　tmp=_DATA!(f) (f1_num) レコード取り出し。//選択に相当
　　　tmp2=tmp!(f2) 射影。
　　　tmp3=tmp2。
　　　qua3=tmp!(f2) 第3四分位数 値読み出し。
　　　qua2=tmp!(f2) 中央値 値読み出し。
　　　qua1=tmp!(f2) 第1四分位数 値読み出し。
　　　ave=tmp!(f2) 平均値 値読み出し。
　　　「qua1!=undef」!なら「
　　　　IRQ=qua3-qua1。

　　　　tmp2!「|n i|
　　　　　「どれか!(n > (qua3+IRQ*1.5)) (n < (qua1-IRQ*1.5)) 本当」！なら「
　　　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*(cnt)+((_PRANGE)/2)) (_YORIGIN+n*_DACOL) 位置 ぺんあり 3 円。
　　　　　　tmp3!(n) 消す。
　　　　　」実行。
　　　　」それぞれ実行。
　　　　max=tmp3!(f2) 最大値　値読み出し。　
　　　　min=tmp3!(f2) 最小値　値読み出し。
　　　　//平均のバッテン
　　　　ペン！ぺんなし  (_XORIGIN+(_XINTERVAL)*(cnt)+((_PRANGE)/2)-((20/sqrt(2))/2)) (_YORIGIN+ave*(_DACOL)+((20/sqrt(2))/2)) 位置 45 右回り ぺんあり 20 歩く 位置 45 左回り．
　　　　ペン！ぺんなし  (_XORIGIN+(_XINTERVAL)*(cnt)+((_PRANGE)/2)-((20/sqrt(2))/2)) (_YORIGIN+ave*(_DACOL)-((20/sqrt(2))/2)) 位置 45 左回り ぺんあり 20 歩く 位置 45 右回り．
　　　　//縦棒
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt+((_PRANGE)/2)) (_YORIGIN+max*_DACOL)
　　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*cnt+((_PRANGE)/2)) (_YORIGIN+qua3*_DACOL) 位置．
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt+((_PRANGE)/2)) (_YORIGIN+qua1*_DACOL)
　　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*cnt+((_PRANGE)/2)) (_YORIGIN+min*_DACOL) 位置．
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+qua3*_DACOL)
　　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+qua1*_DACOL) 位置．
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt+(_PRANGE)) (_YORIGIN+qua3*_DACOL)
　　　　位置 ペンあり (_XORIGIN+(_XINTERVAL)*cnt+(_PRANGE)) (_YORIGIN+qua1*_DACOL) 位置。　
　　　　//横棒
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+qua3*_DACOL) 位置　ペンあり (_PRANGE) 歩く。
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+qua2*_DACOL) 位置　ペンあり (_PRANGE) 歩く。
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+qua1*_DACOL) 位置　ペンあり (_PRANGE) 歩く。
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+max*_DACOL) 位置　ペンあり (_PRANGE) 歩く。
　　　　ペン！ペンなし (_XORIGIN+(_XINTERVAL)*cnt) (_YORIGIN+min*_DACOL) 位置　ペンあり (_PRANGE) 歩く。
　　　」実行。
　　」それぞれ実行。
　　プロット＝ペン！図形にする。
　　ペン！消える。
　　自分！x軸描画。
　　グラフパーツ＝図形！(仕上げ) (プロット) 結合。
　　縦軸パーツ！「|n|
　　　グラフパーツ！(n) 書く。
　　」それぞれ実行。
　　描画済みグラフ!(グラフパーツ)　書く。
　　自分。
　」．
　_箱ひげ図．
」．
